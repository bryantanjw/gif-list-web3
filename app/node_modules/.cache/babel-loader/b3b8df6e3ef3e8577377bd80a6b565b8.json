{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/solana-gif-portal/app/src/components/Header/DropdownContainer/index.js\";\nimport React, { Component, Children, createRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DropdownRoot, Caret, DropdownBackground, AltBackground, InvertedDiv } from \"./Components\";\nimport FadeContents from \"./FadeContents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFirstDropdownSectionHeight = el => {\n  if (!el || !el.querySelector || !el.querySelector(\"*[data-first-dropdown-section]\")) return 0;\n  return el.querySelector(\"*[data-first-dropdown-section]\").offsetHeight;\n};\n\nconst updateAltBackground = _ref => {\n  let {\n    altBackground,\n    prevDropdown,\n    currentDropdown\n  } = _ref;\n  const prevHeight = getFirstDropdownSectionHeight(prevDropdown);\n  const currentHeight = getFirstDropdownSectionHeight(currentDropdown);\n\n  const immediateSetTranslateY = (el, translateY) => {\n    el.style.transform = `translateY(${translateY}px)`;\n    el.style.transition = \"transform 0s\";\n    requestAnimationFrame(() => el.style.transitionDuration = \"\");\n  };\n\n  if (prevHeight) {\n    // transition the grey (\"alt\") background from its previous height to its current height\n    immediateSetTranslateY(altBackground, prevHeight);\n    requestAnimationFrame(() => {\n      altBackground.style.transform = `translateY(${currentHeight}px)`;\n    });\n  } else {\n    // just immediately set the background to the appropriate height\n    // since we don't have a stored value\n    immediateSetTranslateY(altBackground, currentHeight);\n  }\n};\n\nclass DropdownContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.currentDropdownEl = /*#__PURE__*/createRef();\n    this.prevDropdownEl = /*#__PURE__*/createRef();\n  }\n\n  componentDidMount() {\n    updateAltBackground({\n      altBackground: this.altBackgroundEl,\n      prevDropdown: this.prevDropdownEl.current,\n      currentDropdown: this.currentDropdownEl.current,\n      duration: this.props.duration\n    });\n  }\n\n  render() {\n    const {\n      children,\n      direction,\n      animatingOut,\n      duration\n    } = this.props;\n    const [currentDropdown, prevDropdown] = Children.toArray(children);\n    return /*#__PURE__*/_jsxDEV(DropdownRoot, {\n      direction: direction,\n      animatingOut: animatingOut,\n      duration: duration,\n      children: [/*#__PURE__*/_jsxDEV(Flipped, {\n        flipId: \"dropdown-caret\",\n        children: /*#__PURE__*/_jsxDEV(Caret, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flipped, {\n        flipId: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(DropdownBackground, {\n          children: [/*#__PURE__*/_jsxDEV(Flipped, {\n            inverseFlipId: \"dropdown\",\n            children: /*#__PURE__*/_jsxDEV(InvertedDiv, {\n              children: [/*#__PURE__*/_jsxDEV(AltBackground, {\n                ref: el => this.altBackgroundEl = el,\n                duration: duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FadeContents, {\n                direction: direction,\n                duration: duration,\n                ref: this.currentDropdownEl,\n                children: currentDropdown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flipped, {\n            inverseFlipId: \"dropdown\",\n            scale: true,\n            children: /*#__PURE__*/_jsxDEV(InvertedDiv, {\n              absolute: true,\n              children: prevDropdown && /*#__PURE__*/_jsxDEV(FadeContents, {\n                animatingOut: true,\n                direction: direction,\n                duration: duration,\n                ref: this.prevDropdownEl,\n                children: prevDropdown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDropdownContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  animatingOut: PropTypes.bool,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  duration: PropTypes.number\n};\nexport default DropdownContainer;","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/Header/DropdownContainer/index.js"],"names":["React","Component","Children","createRef","PropTypes","Flipped","DropdownRoot","Caret","DropdownBackground","AltBackground","InvertedDiv","FadeContents","getFirstDropdownSectionHeight","el","querySelector","offsetHeight","updateAltBackground","altBackground","prevDropdown","currentDropdown","prevHeight","currentHeight","immediateSetTranslateY","translateY","style","transform","transition","requestAnimationFrame","transitionDuration","DropdownContainer","currentDropdownEl","prevDropdownEl","componentDidMount","altBackgroundEl","current","duration","props","render","children","direction","animatingOut","toArray","propTypes","node","isRequired","bool","oneOf","number"],"mappings":"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","sourcesContent":["import React, { Component, Children, createRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Flipped } from \"react-flip-toolkit\"\nimport {\n  DropdownRoot,\n  Caret,\n  DropdownBackground,\n  AltBackground,\n  InvertedDiv\n} from \"./Components\"\nimport FadeContents from \"./FadeContents\"\n\nconst getFirstDropdownSectionHeight = el => {\n  if (\n    !el ||\n    !el.querySelector ||\n    !el.querySelector(\"*[data-first-dropdown-section]\")\n  )\n    return 0\n  return el.querySelector(\"*[data-first-dropdown-section]\").offsetHeight\n}\n\nconst updateAltBackground = ({\n  altBackground,\n  prevDropdown,\n  currentDropdown\n}) => {\n  const prevHeight = getFirstDropdownSectionHeight(prevDropdown)\n  const currentHeight = getFirstDropdownSectionHeight(currentDropdown)\n\n  const immediateSetTranslateY = (el, translateY) => {\n    el.style.transform = `translateY(${translateY}px)`\n    el.style.transition = \"transform 0s\"\n    requestAnimationFrame(() => (el.style.transitionDuration = \"\"))\n  }\n\n  if (prevHeight) {\n    // transition the grey (\"alt\") background from its previous height to its current height\n    immediateSetTranslateY(altBackground, prevHeight)\n    requestAnimationFrame(() => {\n      altBackground.style.transform = `translateY(${currentHeight}px)`\n    })\n  } else {\n    // just immediately set the background to the appropriate height\n    // since we don't have a stored value\n    immediateSetTranslateY(altBackground, currentHeight)\n  }\n}\n\nclass DropdownContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    animatingOut: PropTypes.bool,\n    direction: PropTypes.oneOf([\"left\", \"right\"]),\n    duration: PropTypes.number\n  }\n\n  currentDropdownEl = createRef()\n  prevDropdownEl = createRef()\n\n  componentDidMount() {\n    updateAltBackground({\n      altBackground: this.altBackgroundEl,\n      prevDropdown: this.prevDropdownEl.current,\n      currentDropdown: this.currentDropdownEl.current,\n      duration: this.props.duration\n    })\n  }\n\n  render() {\n    const { children, direction, animatingOut, duration } = this.props\n    const [currentDropdown, prevDropdown] = Children.toArray(children)\n    return (\n      <DropdownRoot\n        direction={direction}\n        animatingOut={animatingOut}\n        duration={duration}\n      >\n        <Flipped flipId=\"dropdown-caret\">\n          <Caret />\n        </Flipped>\n        <Flipped flipId=\"dropdown\">\n          <DropdownBackground>\n            <Flipped inverseFlipId=\"dropdown\">\n              <InvertedDiv>\n                <AltBackground\n                  ref={el => (this.altBackgroundEl = el)}\n                  duration={duration}\n                />\n                <FadeContents\n                  direction={direction}\n                  duration={duration}\n                  ref={this.currentDropdownEl}\n                >\n                  {currentDropdown}\n                </FadeContents>\n              </InvertedDiv>\n            </Flipped>\n\n            <Flipped inverseFlipId=\"dropdown\" scale>\n              <InvertedDiv absolute>\n                {prevDropdown && (\n                  <FadeContents\n                    animatingOut\n                    direction={direction}\n                    duration={duration}\n                    ref={this.prevDropdownEl}\n                  >\n                    {prevDropdown}\n                  </FadeContents>\n                )}\n              </InvertedDiv>\n            </Flipped>\n          </DropdownBackground>\n        </Flipped>\n      </DropdownRoot>\n    )\n  }\n}\n\nexport default DropdownContainer;"]},"metadata":{},"sourceType":"module"}