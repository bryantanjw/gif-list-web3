{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\nexport const GetGifList = async (programID, baseAccount) => {\n  _s();\n\n  const [gifList, setGifList] = useState([]);\n\n  try {\n    console.log(\">>>>\", baseAccount);\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    console.log(\"Got the account\", account);\n    setGifList(account.gifList);\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error);\n    setGifList(null);\n  }\n};\n\n_s(GetGifList, \"QsD3+MyUinyZG+jtHG9C3XrlC30=\");\n\n_c = GetGifList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetGifList\");","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/getGifList.js"],"names":["useState","idl","getProvider","Program","GetGifList","programID","baseAccount","gifList","setGifList","console","log","provider","program","account","fetch","publicKey","error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAMC,SAAN,EAAiBC,WAAjB,KAAiC;AAAA;;AACzD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAI;AACFS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,WAApB;AACA,UAAMK,QAAQ,GAAGT,WAAW,EAA5B;AACA,UAAMU,OAAO,GAAG,IAAIT,OAAJ,CAAYF,GAAZ,EAAiBI,SAAjB,EAA4BM,QAA5B,CAAhB;AACA,UAAME,OAAO,GAAG,MAAMD,OAAO,CAACC,OAAR,CAAgBP,WAAhB,CAA4BQ,KAA5B,CAAkCR,WAAW,CAACS,SAA9C,CAAtB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,OAA/B;AACAL,IAAAA,UAAU,CAACK,OAAO,CAACN,OAAT,CAAV;AAED,GATD,CASE,OAAOS,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,KAArC;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,CAfM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import { useState } from 'react';\nimport idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\n\nexport const GetGifList = async(programID, baseAccount) => {\n  const [gifList, setGifList] = useState([]);\n  try {\n    console.log(\">>>>\", baseAccount)\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    \n    console.log(\"Got the account\", account)\n    setGifList(account.gifList)\n\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error)\n    setGifList(null);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}