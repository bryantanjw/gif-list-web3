{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/renderConnectedContainer.js\";\nimport { createGifAccount } from \"./createGifAccount\";\nimport { sendGif } from \"./sendGif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onInputChange = event => {\n  const {\n    value\n  } = event.target;\n  setInputValue(value);\n};\n\nconst upvote = async id => {\n  console.log('Upvoting GifID: ', id);\n  upvoteGif(id);\n};\n\nexport const renderConnectedContainer = (inputValue, setInputValue, gifList, setGifList, programID, baseAccount) => {\n  // If we hit this, it means the program account hasn't been initialized.\n  if (gifList === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connected-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-button submit-gif-button\",\n        onClick: createGifAccount,\n        children: \"Do One-Time Initialization For GIF Program Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  } // Otherwise, we're good! Account exists. User can submit GIFs.\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connected-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          sendGif();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter gif link!\",\n          value: inputValue,\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cta-button submit-gif-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif-grid\",\n        children: gifList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gif-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.gifLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"cta-button upvote-gif-button\",\n            data: item.id,\n            onClick: upvote.bind(this, item.id),\n            children: [item.votes.toString(), \" \\uD83D\\uDC4D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n};","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/renderConnectedContainer.js"],"names":["createGifAccount","sendGif","onInputChange","event","value","target","setInputValue","upvote","id","console","log","upvoteGif","renderConnectedContainer","inputValue","gifList","setGifList","programID","baseAccount","preventDefault","map","item","index","gifLink","bind","votes","toString"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAK,CAACE,MAAxB;AACAC,EAAAA,aAAa,CAACF,KAAD,CAAb;AACH,CAHD;;AAKA,MAAMG,MAAM,GAAG,MAAOC,EAAP,IAAc;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,EAAhC;AACAG,EAAAA,SAAS,CAACH,EAAD,CAAT;AACH,CAHD;;AAKA,OAAO,MAAMI,wBAAwB,GAAG,CACpCC,UADoC,EAEpCP,aAFoC,EAGpCQ,OAHoC,EAIpCC,UAJoC,EAKpCC,SALoC,EAMpCC,WANoC,KAOnC;AACD;AACA,MAAIH,OAAO,KAAK,IAAhB,EAAsB;AAClB,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAiD,QAAA,OAAO,EAAEd,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAOH,GARD,CASA;AATA,OAUK;AACD,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AACA,QAAA,QAAQ,EAAGG,KAAD,IAAW;AACjBA,UAAAA,KAAK,CAACe,cAAN;AACAjB,UAAAA,OAAO;AACV,SAJD;AAAA,gCAMA;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,iBAFhB;AAGI,UAAA,KAAK,EAAEY,UAHX;AAII,UAAA,QAAQ,EAAEX;AAJd;AAAA;AAAA;AAAA;AAAA,gBANA,eAYA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAEKY,OAAO,CAACK,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,8BAFd;AAGI,YAAA,IAAI,EAAEF,IAAI,CAACZ,EAHf;AAII,YAAA,OAAO,EAAED,MAAM,CAACgB,IAAP,CAAY,IAAZ,EAAkBH,IAAI,CAACZ,EAAvB,CAJb;AAAA,uBAMCY,IAAI,CAACI,KAAL,CAAWC,QAAX,EAND;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAA+BJ,KAA/B;AAAA;AAAA;AAAA;AAAA,gBADH;AAFL;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAoCH;AACJ,CAzDM","sourcesContent":["import { createGifAccount } from \"./createGifAccount\";\nimport { sendGif } from \"./sendGif\";\n\nconst onInputChange = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n};  \n\nconst upvote = async (id) => {\n    console.log('Upvoting GifID: ', id);\n    upvoteGif(id);\n};\n\nexport const renderConnectedContainer = (\n    inputValue,\n    setInputValue,\n    gifList,\n    setGifList,\n    programID,\n    baseAccount,\n) => {\n    // If we hit this, it means the program account hasn't been initialized.\n    if (gifList === null) {\n        return (\n        <div className=\"connected-container\">\n            <button className=\"cta-button submit-gif-button\" onClick={createGifAccount}>\n            Do One-Time Initialization For GIF Program Account\n            </button>\n        </div>\n        )\n    } \n    // Otherwise, we're good! Account exists. User can submit GIFs.\n    else {\n        return(\n        <div className=\"connected-container\">\n            <form\n            onSubmit={(event) => {\n                event.preventDefault();\n                sendGif();\n            }}\n            >\n            <input\n                type=\"text\"\n                placeholder=\"Enter gif link!\"\n                value={inputValue}\n                onChange={onInputChange}\n            />\n            <button type=\"submit\" className=\"cta-button submit-gif-button\">\n                Submit\n            </button>\n            </form>\n            <div className=\"gif-grid\">\n                {/* We use index as the key instead, also, the src is now item.gifLink */}\n                {gifList.map((item, index) => (\n                    <div className=\"gif-item\" key={index}>\n                        <img src={item.gifLink} />\n                        <button \n                            type=\"submit\" \n                            className=\"cta-button upvote-gif-button\"\n                            data={item.id}\n                            onClick={upvote.bind(this, item.id)}\n                        >\n                        {item.votes.toString()} üëç\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}