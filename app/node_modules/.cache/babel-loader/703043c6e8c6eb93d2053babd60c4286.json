{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\nexport const getGifList = async (programID, baseAccount) => {\n  _s();\n\n  const [gifList, setGifList] = useState([]);\n\n  try {\n    console.log(\">>>>\", baseAccount);\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    console.log(\"Got the account\", account);\n    setGifList(account.gifList);\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error);\n    setGifList(null);\n  }\n};\n\n_s(getGifList, \"QsD3+MyUinyZG+jtHG9C3XrlC30=\");","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/getGifList.js"],"names":["idl","getProvider","Program","getGifList","programID","baseAccount","gifList","setGifList","useState","console","log","provider","program","account","fetch","publicKey","error"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAMC,SAAN,EAAiBC,WAAjB,KAAiC;AAAA;;AACzD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,WAApB;AACA,UAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACA,UAAMW,OAAO,GAAG,IAAIV,OAAJ,CAAYF,GAAZ,EAAiBI,SAAjB,EAA4BO,QAA5B,CAAhB;AACA,UAAME,OAAO,GAAG,MAAMD,OAAO,CAACC,OAAR,CAAgBR,WAAhB,CAA4BS,KAA5B,CAAkCT,WAAW,CAACU,SAA9C,CAAtB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,OAA/B;AACAN,IAAAA,UAAU,CAACM,OAAO,CAACP,OAAT,CAAV;AAED,GATD,CASE,OAAOU,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,KAArC;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,CAfM;;GAAMJ,U","sourcesContent":["import idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\n\nexport const getGifList = async(programID, baseAccount) => {\n  const [gifList, setGifList] = useState([]);\n  try {\n    console.log(\">>>>\", baseAccount)\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    \n    console.log(\"Got the account\", account)\n    setGifList(account.gifList)\n\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error)\n    setGifList(null);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}