{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/solana-gif-portal/app/src/components/Header/AnimatedNavbar.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport NavbarItem from \"./Navbar/NavbarItem\";\nimport { Flipper } from \"react-flip-toolkit\";\nimport DropdownContainer from \"./DropdownContainer\";\nimport CompanyDropdown from \"./DropdownContents/CompanyDropdown\";\nimport DevelopersDropdown from \"./DropdownContents/DevelopersDropdown\";\nimport ProductsDropdown from \"./DropdownContents/ProductsDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navbarConfig = [{\n  title: \"Home\",\n  dropdown: ProductsDropdown,\n  link: \"/\"\n}, {\n  title: \"Portal\",\n  dropdown: DevelopersDropdown,\n  link: \"/portal\"\n}, {\n  title: \"NFTs\",\n  dropdown: CompanyDropdown,\n  link: \"/nfts\"\n}];\nexport default class AnimatedNavbar extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      activeIndices: []\n    };\n\n    this.resetDropdownState = i => {\n      this.setState({\n        activeIndices: typeof i === \"number\" ? [i] : [],\n        animatingOut: false\n      });\n      delete this.animatingOutTimeout;\n    };\n\n    this.onMouseEnter = i => {\n      if (this.animatingOutTimeout) {\n        clearTimeout(this.animatingOutTimeout);\n        this.resetDropdownState(i);\n        return;\n      }\n\n      if (this.state.activeIndices[this.state.activeIndices.length - 1] === i) return;\n      this.setState(prevState => ({\n        activeIndices: prevState.activeIndices.concat(i),\n        animatingOut: false\n      }));\n    };\n\n    this.onMouseLeave = () => {\n      this.setState({\n        animatingOut: true\n      });\n      this.animatingOutTimeout = setTimeout(this.resetDropdownState, this.props.duration);\n    };\n  }\n\n  render() {\n    const {\n      duration\n    } = this.props;\n    let CurrentDropdown;\n    let PrevDropdown;\n    let direction;\n    const currentIndex = this.state.activeIndices[this.state.activeIndices.length - 1];\n    const prevIndex = this.state.activeIndices.length > 1 && this.state.activeIndices[this.state.activeIndices.length - 2];\n    if (typeof currentIndex === \"number\") CurrentDropdown = navbarConfig[currentIndex].dropdown;\n\n    if (typeof prevIndex === \"number\") {\n      PrevDropdown = navbarConfig[prevIndex].dropdown;\n      direction = currentIndex > prevIndex ? \"right\" : \"left\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(Flipper, {\n      flipKey: currentIndex,\n      spring: duration === 300 ? \"noWobble\" : {\n        stiffness: 10,\n        damping: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        onMouseLeave: this.onMouseLeave,\n        children: navbarConfig.map((n, index) => {\n          return /*#__PURE__*/_jsxDEV(NavbarItem, {\n            title: n.title,\n            link: n.link,\n            index: index,\n            onMouseEnter: this.onMouseEnter,\n            children: currentIndex === index && /*#__PURE__*/_jsxDEV(DropdownContainer, {\n              direction: direction,\n              animatingOut: this.state.animatingOut,\n              duration: duration,\n              children: [/*#__PURE__*/_jsxDEV(CurrentDropdown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), PrevDropdown && /*#__PURE__*/_jsxDEV(PrevDropdown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, n.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/Header/AnimatedNavbar.js"],"names":["React","Component","Navbar","NavbarItem","Flipper","DropdownContainer","CompanyDropdown","DevelopersDropdown","ProductsDropdown","navbarConfig","title","dropdown","link","AnimatedNavbar","state","activeIndices","resetDropdownState","i","setState","animatingOut","animatingOutTimeout","onMouseEnter","clearTimeout","length","prevState","concat","onMouseLeave","setTimeout","props","duration","render","CurrentDropdown","PrevDropdown","direction","currentIndex","prevIndex","stiffness","damping","map","n","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Navbar from \"./Navbar\"\nimport NavbarItem from \"./Navbar/NavbarItem\"\nimport { Flipper } from \"react-flip-toolkit\"\nimport DropdownContainer from \"./DropdownContainer\"\nimport CompanyDropdown from \"./DropdownContents/CompanyDropdown\"\nimport DevelopersDropdown from \"./DropdownContents/DevelopersDropdown\"\nimport ProductsDropdown from \"./DropdownContents/ProductsDropdown\"\n\nconst navbarConfig = [\n  { title: \"Home\", dropdown: ProductsDropdown, link: \"/\" },\n  { title: \"Portal\", dropdown: DevelopersDropdown, link: \"/portal\" },\n  { title: \"NFTs\", dropdown: CompanyDropdown, link: \"/nfts\" }\n]\n\nexport default class AnimatedNavbar extends Component {\n  state = {\n    activeIndices: []\n  }\n\n  resetDropdownState = i => {\n    this.setState({\n      activeIndices: typeof i === \"number\" ? [i] : [],\n      animatingOut: false\n    })\n    delete this.animatingOutTimeout\n  }\n\n  onMouseEnter = i => {\n    if (this.animatingOutTimeout) {\n      clearTimeout(this.animatingOutTimeout)\n      this.resetDropdownState(i)\n      return\n    }\n    if (this.state.activeIndices[this.state.activeIndices.length - 1] === i)\n      return\n\n    this.setState(prevState => ({\n      activeIndices: prevState.activeIndices.concat(i),\n      animatingOut: false\n    }))\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      animatingOut: true\n    })\n    this.animatingOutTimeout = setTimeout(\n      this.resetDropdownState,\n      this.props.duration\n    )\n  }\n\n  render() {\n    const { duration } = this.props\n    let CurrentDropdown\n    let PrevDropdown\n    let direction\n\n    const currentIndex = this.state.activeIndices[\n      this.state.activeIndices.length - 1\n    ]\n    const prevIndex =\n      this.state.activeIndices.length > 1 &&\n      this.state.activeIndices[this.state.activeIndices.length - 2]\n\n    if (typeof currentIndex === \"number\")\n      CurrentDropdown = navbarConfig[currentIndex].dropdown\n    if (typeof prevIndex === \"number\") {\n      PrevDropdown = navbarConfig[prevIndex].dropdown\n      direction = currentIndex > prevIndex ? \"right\" : \"left\"\n    }\n\n    return (\n      <Flipper\n        flipKey={currentIndex}\n        spring={duration === 300 ? \"noWobble\" : { stiffness: 10, damping: 10 }}\n      >\n        <Navbar onMouseLeave={this.onMouseLeave}>\n          {navbarConfig.map((n, index) => {\n            return (\n              <NavbarItem\n                key={n.title}\n                title={n.title}\n                link={n.link}\n                index={index}\n                onMouseEnter={this.onMouseEnter}\n              >\n                {currentIndex === index && (\n                  <DropdownContainer\n                    direction={direction}\n                    animatingOut={this.state.animatingOut}\n                    duration={duration}\n                  >\n                    <CurrentDropdown />\n                    {PrevDropdown && <PrevDropdown />}\n                  </DropdownContainer>\n                )}\n              </NavbarItem>\n            )\n          })}\n        </Navbar>\n      </Flipper>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}