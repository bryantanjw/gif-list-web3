{"ast":null,"code":"import idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program, Provider, web3 } from \"@project-serum/anchor\";\nimport { SystemProgram } from \"@solana/web3.js\";\nimport { getGifList } from './getGifList';\nexport const createGifAccount = async (programID, baseAccount) => {\n  try {\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    console.log(\"ping\");\n\n    if (baseAccount === null) {\n      await program.rpc.startStuffOff({\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n          systemProgram: SystemProgram.programId\n        },\n        signers: [baseAccount]\n      });\n      console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString());\n    }\n\n    await getGifList();\n  } catch (error) {\n    console.log(\"Error creating BaseAccount account:\", error);\n  }\n};","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/createGifAccount.js"],"names":["idl","getProvider","Program","Provider","web3","SystemProgram","getGifList","createGifAccount","programID","baseAccount","provider","program","console","log","rpc","startStuffOff","accounts","publicKey","user","wallet","systemProgram","programId","signers","toString","error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,IAA5B,QAAwC,uBAAxC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,SAAP,EAAkBC,WAAlB,KAAkC;AAC9D,MAAI;AACF,UAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,UAAMU,OAAO,GAAG,IAAIT,OAAJ,CAAYF,GAAZ,EAAiBQ,SAAjB,EAA4BE,QAA5B,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIJ,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAME,OAAO,CAACG,GAAR,CAAYC,aAAZ,CAA0B;AAC9BC,QAAAA,QAAQ,EAAE;AACRP,UAAAA,WAAW,EAAEA,WAAW,CAACQ,SADjB;AAERC,UAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBF,SAFd;AAGRG,UAAAA,aAAa,EAAEf,aAAa,CAACgB;AAHrB,SADoB;AAM9BC,QAAAA,OAAO,EAAE,CAACb,WAAD;AANqB,OAA1B,CAAN;AAQAG,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDJ,WAAW,CAACQ,SAAZ,CAAsBM,QAAtB,EAArD;AACD;;AAED,UAAMjB,UAAU,EAAhB;AAED,GAlBD,CAkBE,OAAMkB,KAAN,EAAa;AACbZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDW,KAAnD;AACD;AACJ,CAtBM","sourcesContent":["import idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program, Provider, web3 } from \"@project-serum/anchor\";\nimport { SystemProgram } from \"@solana/web3.js\";\nimport { getGifList } from './getGifList';\n\nexport const createGifAccount = async (programID, baseAccount) => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n      console.log(\"ping\");\n      if (baseAccount === null) {\n        await program.rpc.startStuffOff({\n          accounts: {\n            baseAccount: baseAccount.publicKey,\n            user: provider.wallet.publicKey,\n            systemProgram: SystemProgram.programId,\n          },\n          signers: [baseAccount]\n        });\n        console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString())\n      }\n      \n      await getGifList();\n\n    } catch(error) {\n      console.log(\"Error creating BaseAccount account:\", error)\n    }\n};"]},"metadata":{},"sourceType":"module"}