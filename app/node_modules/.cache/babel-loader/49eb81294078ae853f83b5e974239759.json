{"ast":null,"code":"import { useState } from 'react';\nimport idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\nexport const getGifList = async (programID, baseAccount, setGifList) => {\n  try {\n    console.log(\">>>>\", baseAccount);\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    console.log(\"Got the account\", account);\n    setGifList(account.gifList.sort((a, b) => b.votes > a.votes ? 1 : -1));\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error);\n    setGifList(null);\n  }\n};","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/getGifList.js"],"names":["useState","idl","getProvider","Program","getGifList","programID","baseAccount","setGifList","console","log","provider","program","account","fetch","publicKey","gifList","sort","a","b","votes","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAMC,SAAN,EAAiBC,WAAjB,EAA8BC,UAA9B,KAA6C;AACrE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,WAApB;AACA,UAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,UAAMS,OAAO,GAAG,IAAIR,OAAJ,CAAYF,GAAZ,EAAiBI,SAAjB,EAA4BK,QAA5B,CAAhB;AACA,UAAME,OAAO,GAAG,MAAMD,OAAO,CAACC,OAAR,CAAgBN,WAAhB,CAA4BO,KAA5B,CAAkCP,WAAW,CAACQ,SAA9C,CAAtB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,OAA/B;AACAL,IAAAA,UAAU,CAACK,OAAO,CAACG,OAAR,CACcC,IADd,CACmB,CAACC,CAAD,EAAGC,CAAH,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADtD,CAAD,CAAV;AAGD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACdZ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCW,KAArC;AACAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,CAfM","sourcesContent":["import { useState } from 'react';\nimport idl from '../idl.json';\nimport { getProvider } from '../../utils/getProvider';\nimport { Program } from '@project-serum/anchor';\n\nexport const getGifList = async(programID, baseAccount, setGifList) => {\n  try {\n    console.log(\">>>>\", baseAccount)\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n    \n    console.log(\"Got the account\", account)\n    setGifList(account.gifList\n                            .sort((a,b) => (b.votes > a.votes ? 1 : -1)))\n\n  } catch (error) {\n    console.log(\"Error in getGifList: \", error)\n    setGifList(null);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}