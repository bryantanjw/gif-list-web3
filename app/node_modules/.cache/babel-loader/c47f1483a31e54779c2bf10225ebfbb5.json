{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/solana-gif-portal/app/src/components/NftDrop/app/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport CandyMachine from './CandyMachine';\nimport { CheckIfWalletIsConnected } from '../../../utils/checkIfWalletIsConnected';\nimport { connectWallet } from '../../../utils/connectWallet';\nimport { renderNotConnectedContainer } from '../../../utils/renderNotConnectedContainer'; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'bryantanjw';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst NftDrop = () => {\n  _s();\n\n  /*\n   * When our component first mounts, let's check to see if we have a connected\n   * Phantom Wallet\n   */\n  useEffect(() => {\n    const onLoad = async () => {\n      const registeredWalletAddress = await CheckIfWalletIsConnected();\n      setWalletAddress(registeredWalletAddress);\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header header-nft\",\n          children: \"\\uD83C\\uDF6D Generative NFTs of Taylor Swift Album Covers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"This is a collection of 10 NFTs. Each NFT is a combination of a circle and a triangle with a Taylor Swift album cover as the background.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), !walletAddress && renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), walletAddress && /*#__PURE__*/_jsxDEV(CandyMachine, {\n        walletAddress: window.solana\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built by @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftDrop, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NftDrop;\nexport default NftDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftDrop\");","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/NftDrop/app/src/index.js"],"names":["React","useEffect","useState","CandyMachine","CheckIfWalletIsConnected","connectWallet","renderNotConnectedContainer","TWITTER_HANDLE","TWITTER_LINK","NftDrop","onLoad","registeredWalletAddress","setWalletAddress","window","addEventListener","removeEventListener","walletAddress","solana","twitterLogo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,2BAAT,QAA4C,4CAA5C,C,CAEA;;;AACA,MAAMC,cAAc,GAAG,YAAvB;AACA,MAAMC,YAAY,GAAI,uBAAsBD,cAAe,EAA3D;;AAEA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB;AACF;AACA;AACA;AACER,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,MAAM,GAAG,YAAY;AACzB,YAAMC,uBAAuB,GAAG,MAAMP,wBAAwB,EAA9D;AACAQ,MAAAA,gBAAgB,CAACD,uBAAD,CAAhB;AACD,KAHD;;AAIAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCJ,MAAhC;AACA,WAAO,MAAMG,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCL,MAAnC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAIG,CAACM,aAAD,IAAkBV,2BAA2B,EAJhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOGU,aAAa,iBAAI,QAAC,YAAD;AAAc,QAAA,aAAa,EAAEH,MAAM,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,cAPpB,eAQE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,cAAlC;AAAiD,UAAA,GAAG,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAEV,YAFR;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,YAJN;AAAA,oBAKG,aAAYD,cAAe;AAL9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApCD;;GAAME,O;;KAAAA,O;AAsCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport CandyMachine from './CandyMachine';\nimport { CheckIfWalletIsConnected } from '../../../utils/checkIfWalletIsConnected';\nimport { connectWallet } from '../../../utils/connectWallet';\nimport { renderNotConnectedContainer } from '../../../utils/renderNotConnectedContainer';\n\n// Constants\nconst TWITTER_HANDLE = 'bryantanjw';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst NftDrop = () => {\n  /*\n   * When our component first mounts, let's check to see if we have a connected\n   * Phantom Wallet\n   */\n  useEffect(() => {\n    const onLoad = async () => {\n      const registeredWalletAddress = await CheckIfWalletIsConnected();\n      setWalletAddress(registeredWalletAddress);\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header header-nft\">üç≠ Generative NFTs of Taylor Swift Album Covers</p>\n          <p className=\"sub-text\">This is a collection of 10 NFTs. Each NFT is a combination of a circle\n          and a triangle with a Taylor Swift album cover as the background.</p>\n          {!walletAddress && renderNotConnectedContainer()}\n        </div>\n        {walletAddress && <CandyMachine walletAddress={window.solana} />}\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built by @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NftDrop;\n"]},"metadata":{},"sourceType":"module"}