{"ast":null,"code":"import { getProvider } from \"../../utils/getProvider\";\nimport idl from '../idl.json';\nimport { Program } from '@project-serum/anchor';\nimport { getGifList } from \"./getGifList\";\nexport const upvoteGif = async id => {\n  try {\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    await program.rpc.upvoteGif(id, {\n      accounts: {\n        baseAccount: baseAccount.publicKey,\n        user: provider.wallet.publicKey\n      }\n    });\n    await getGifList(programID, baseAccount, setGifList);\n  } catch (error) {\n    console.log('Error Upvoting GifID: ', id, error);\n  }\n};","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/upvoteGif.js"],"names":["getProvider","idl","Program","getGifList","upvoteGif","id","provider","program","programID","rpc","accounts","baseAccount","publicKey","user","wallet","setGifList","error","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAc;AACnC,MAAI;AACF,UAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,UAAMO,OAAO,GAAG,IAAIL,OAAJ,CAAYD,GAAZ,EAAiBO,SAAjB,EAA4BF,QAA5B,CAAhB;AAEA,UAAMC,OAAO,CAACE,GAAR,CAAYL,SAAZ,CAAsBC,EAAtB,EAA0B;AAC9BK,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAEA,WAAW,CAACC,SADjB;AAERC,QAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBF;AAFd;AADoB,KAA1B,CAAN;AAMA,UAAMT,UAAU,CAACK,SAAD,EAAYG,WAAZ,EAAyBI,UAAzB,CAAhB;AACD,GAXD,CAWE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCb,EAAtC,EAA0CW,KAA1C;AACD;AACJ,CAfM","sourcesContent":["import { getProvider } from \"../../utils/getProvider\";\nimport idl from '../idl.json';\nimport { Program } from '@project-serum/anchor';\nimport { getGifList } from \"./getGifList\";\n\nexport const upvoteGif = async (id) => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n\n      await program.rpc.upvoteGif(id, {\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n        },\n      });\n      await getGifList(programID, baseAccount, setGifList);\n    } catch (error) {\n      console.log('Error Upvoting GifID: ', id, error);\n    }\n};"]},"metadata":{},"sourceType":"module"}