{"ast":null,"code":"import { parse as t, translateX as e, translateY as i, scaleX as n, scaleY as r, multiply as s } from \"rematrix\";\n\nvar a = function (t) {\n  return \"number\" == typeof t;\n},\n    o = function (t) {\n  return \"function\" == typeof t;\n},\n    l = function (t) {\n  return \"[object Object]\" === Object.prototype.toString.call(t);\n},\n    p = function (t) {\n  return Array.prototype.slice.apply(t);\n},\n    c = function (t) {\n  var e = t.reduce(function (t, e) {\n    return t[e] = (t[e] || 0) + 1, t;\n  }, {});\n  return Object.keys(e).filter(function (t) {\n    return e[t] > 1;\n  });\n};\n\nfunction u(t) {\n  return [].slice.call(arguments, 1).forEach(function (e) {\n    if (e) for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n  }), t;\n}\n\nvar d,\n    f = function (t, e, i) {\n  return t + (e - t) * i;\n},\n    h = {\n  __proto__: null,\n  isNumber: a,\n  isFunction: o,\n  isObject: l,\n  toArray: p,\n  getDuplicateValsAsStrings: c,\n  assign: u,\n  tweenProp: f\n},\n    g = {\n  __proto__: null,\n  DATA_FLIP_ID: \"data-flip-id\",\n  DATA_INVERSE_FLIP_ID: \"data-inverse-flip-id\",\n  DATA_FLIP_COMPONENT_ID: \"data-flip-component-id\",\n  DATA_FLIP_CONFIG: \"data-flip-config\",\n  DATA_PORTAL_KEY: \"data-portal-key\",\n  DATA_EXIT_CONTAINER: \"data-exit-container\"\n},\n    m = {\n  noWobble: {\n    stiffness: 200,\n    damping: 26\n  },\n  gentle: {\n    stiffness: 120,\n    damping: 14\n  },\n  veryGentle: {\n    stiffness: 130,\n    damping: 17\n  },\n  wobbly: {\n    stiffness: 180,\n    damping: 12\n  },\n  stiff: {\n    stiffness: 260,\n    damping: 26\n  }\n},\n    v = function (t) {\n  return l(t) ? t : Object.keys(m).indexOf(t) > -1 ? m[t] : {};\n};\n\n\"undefined\" != typeof window && (d = window.requestAnimationFrame);\n\nvar y = d = d || function (t) {\n  window.setTimeout(t, 1e3 / 60);\n},\n    _ = Date.now(),\n    S = \"object\" == typeof performance && \"function\" == typeof performance.now ? function () {\n  return performance.now();\n} : function () {\n  return Date.now() - _;\n};\n\nfunction E(t, e) {\n  var i = t.indexOf(e);\n  -1 !== i && t.splice(i, 1);\n}\n\nvar A = function () {\n  function t() {}\n\n  return t.prototype.run = function () {\n    var t = this;\n    y(function () {\n      t.springSystem.loop(S());\n    });\n  }, t;\n}(),\n    C = function () {\n  this.position = 0, this.velocity = 0;\n},\n    b = 0,\n    I = function () {\n  function t(t) {\n    this._id = \"s\" + b++, this._springSystem = t, this.listeners = [], this._startValue = 0, this._currentState = new C(), this._displacementFromRestThreshold = .001, this._endValue = 0, this._overshootClampingEnabled = !1, this._previousState = new C(), this._restSpeedThreshold = .001, this._tempState = new C(), this._timeAccumulator = 0, this._wasAtRest = !0, this._cachedSpringConfig = {};\n  }\n\n  var e = t.prototype;\n  return e.getId = function () {\n    return this._id;\n  }, e.destroy = function () {\n    this.listeners = [], this._springSystem.deregisterSpring(this);\n  }, e.setSpringConfig = function (t) {\n    return this._springConfig = t, this;\n  }, e.getCurrentValue = function () {\n    return this._currentState.position;\n  }, e.getDisplacementDistanceForState = function (t) {\n    return Math.abs(this._endValue - t.position);\n  }, e.setEndValue = function (t) {\n    if (t === this._endValue) return this;\n    if (this.prevEndValue = t, this._endValue === t && this.isAtRest()) return this;\n    this._startValue = this.getCurrentValue(), this._endValue = t, this._springSystem.activateSpring(this.getId());\n\n    for (var e = 0, i = this.listeners.length; e < i; e++) {\n      var n = this.listeners[e].onSpringEndStateChange;\n      n && n(this);\n    }\n\n    return this;\n  }, e.setVelocity = function (t) {\n    return t === this._currentState.velocity || (this._currentState.velocity = t, this._springSystem.activateSpring(this.getId())), this;\n  }, e.setCurrentValue = function (t) {\n    this._startValue = t, this._currentState.position = t;\n\n    for (var e = 0, i = this.listeners.length; e < i; e++) {\n      var n = this.listeners[e];\n      n.onSpringUpdate && n.onSpringUpdate(this);\n    }\n\n    return this;\n  }, e.setAtRest = function () {\n    return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this;\n  }, e.setOvershootClampingEnabled = function (t) {\n    return this._overshootClampingEnabled = t, this;\n  }, e.isOvershooting = function () {\n    var t = this._startValue,\n        e = this._endValue;\n    return this._springConfig.tension > 0 && (t < e && this.getCurrentValue() > e || t > e && this.getCurrentValue() < e);\n  }, e.advance = function (t, e) {\n    var i = this.isAtRest();\n\n    if (!i || !this._wasAtRest) {\n      var n = e;\n      e > .064 && (n = .064), this._timeAccumulator += n;\n\n      for (var r, s, a, o, l, p, c = this._springConfig.tension, u = this._springConfig.friction, d = this._currentState.position, f = this._currentState.velocity, h = this._tempState.position, g = this._tempState.velocity; this._timeAccumulator >= .001;) this._timeAccumulator -= .001, this._timeAccumulator < .001 && (this._previousState.position = d, this._previousState.velocity = f), s = c * (this._endValue - h) - u * f, o = c * (this._endValue - (h = d + .001 * (r = f) * .5)) - u * (g = f + .001 * s * .5), p = c * (this._endValue - (h = d + .001 * (a = g) * .5)) - u * (g = f + .001 * o * .5), h = d + .001 * (l = g), d += 1 / 6 * (r + 2 * (a + l) + (g = f + .001 * p)) * .001, f += 1 / 6 * (s + 2 * (o + p) + (c * (this._endValue - h) - u * g)) * .001;\n\n      this._tempState.position = h, this._tempState.velocity = g, this._currentState.position = d, this._currentState.velocity = f, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / .001), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), i = !0);\n      var m = !1;\n      this._wasAtRest && (this._wasAtRest = !1, m = !0);\n      var v = !1;\n      i && (this._wasAtRest = !0, v = !0), this.notifyPositionUpdated(m, v);\n    }\n  }, e.notifyPositionUpdated = function (t, e) {\n    var i = this;\n    this.listeners.filter(Boolean).forEach(function (n) {\n      t && n.onSpringActivate && !i._onActivateCalled && (n.onSpringActivate(i), i._onActivateCalled = !0), n.onSpringUpdate && n.onSpringUpdate(i), e && n.onSpringAtRest && n.onSpringAtRest(i);\n    });\n  }, e.systemShouldAdvance = function () {\n    return !this.isAtRest() || !this.wasAtRest();\n  }, e.wasAtRest = function () {\n    return this._wasAtRest;\n  }, e.isAtRest = function () {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension);\n  }, e._interpolate = function (t) {\n    this._currentState.position = this._currentState.position * t + this._previousState.position * (1 - t), this._currentState.velocity = this._currentState.velocity * t + this._previousState.velocity * (1 - t);\n  }, e.addListener = function (t) {\n    return this.listeners.push(t), this;\n  }, e.addOneTimeListener = function (t) {\n    var e = this;\n    return Object.keys(t).forEach(function (i) {\n      var n;\n      t[i] = (n = t[i], function () {\n        n.apply(void 0, [].slice.call(arguments)), e.removeListener(t);\n      });\n    }), this.listeners.push(t), this;\n  }, e.removeListener = function (t) {\n    return E(this.listeners, t), this;\n  }, t;\n}(),\n    O = function () {\n  function t(t) {\n    this.looper = t || new A(), this.looper.springSystem = this, this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = !0, this._lastTimeMillis = -1, this._springRegistry = {};\n  }\n\n  var e = t.prototype;\n  return e.createSpring = function (t, e) {\n    return this.createSpringWithConfig({\n      tension: t,\n      friction: e\n    });\n  }, e.createSpringWithConfig = function (t) {\n    var e = new I(this);\n    return this.registerSpring(e), e.setSpringConfig(t), e;\n  }, e.getIsIdle = function () {\n    return this._isIdle;\n  }, e.registerSpring = function (t) {\n    this._springRegistry[t.getId()] = t;\n  }, e.deregisterSpring = function (t) {\n    E(this._activeSprings, t), delete this._springRegistry[t.getId()];\n  }, e.advance = function (t, e) {\n    for (var i = this; this._idleSpringIndices.length > 0;) this._idleSpringIndices.pop();\n\n    for (this._activeSprings.filter(Boolean).forEach(function (n) {\n      n.systemShouldAdvance() ? n.advance(t / 1e3, e / 1e3) : i._idleSpringIndices.push(i._activeSprings.indexOf(n));\n    }); this._idleSpringIndices.length > 0;) {\n      var n = this._idleSpringIndices.pop();\n\n      n >= 0 && this._activeSprings.splice(n, 1);\n    }\n  }, e.loop = function (t) {\n    var e;\n    -1 === this._lastTimeMillis && (this._lastTimeMillis = t - 1);\n    var i = t - this._lastTimeMillis;\n    this._lastTimeMillis = t;\n    var n = 0,\n        r = this.listeners.length;\n\n    for (n = 0; n < r; n++) (e = this.listeners[n]).onBeforeIntegrate && e.onBeforeIntegrate(this);\n\n    for (this.advance(t, i), 0 === this._activeSprings.length && (this._isIdle = !0, this._lastTimeMillis = -1), n = 0; n < r; n++) (e = this.listeners[n]).onAfterIntegrate && e.onAfterIntegrate(this);\n\n    this._isIdle || this.looper.run();\n  }, e.activateSpring = function (t) {\n    var e = this._springRegistry[t];\n    -1 === this._activeSprings.indexOf(e) && this._activeSprings.push(e), this.getIsIdle() && (this._isIdle = !1, this.looper.run());\n  }, t;\n}(),\n    w = new O(),\n    x = function (t) {\n  var e = t.springConfig,\n      i = e.overshootClamping,\n      n = t.getOnUpdateFunc,\n      r = t.onAnimationEnd,\n      s = t.onSpringActivate,\n      a = w.createSpring(e.stiffness, e.damping);\n  a.setOvershootClampingEnabled(!!i);\n  var o = {\n    onSpringActivate: s,\n    onSpringAtRest: function () {\n      a.destroy(), r();\n    },\n    onSpringUpdate: n({\n      spring: a,\n      onAnimationEnd: r\n    })\n  };\n  return a.addListener(o), a;\n},\n    U = function (t) {\n  var e = x(t);\n  return e.setEndValue(1), e;\n},\n    V = function (t, e) {\n  if (void 0 === e && (e = {}), t && t.length) {\n    e.reverse && t.reverse();\n    var i,\n        n = \"number\" != typeof (i = e.speed) ? 1.1 : 1 + Math.min(Math.max(5 * i, 0), 5),\n        r = 1 / Math.max(Math.min(t.length, 100), 10),\n        s = t.map(function (t, e) {\n      var i = t.getOnUpdateFunc;\n      return t.getOnUpdateFunc = function (t) {\n        var a = i(t);\n        return function (t) {\n          var i = t.getCurrentValue();\n          (i = i < .01 ? 0 : i > .99 ? 1 : i) >= r && s[e + 1] && s[e + 1](Math.max(Math.min(i * n, 1), 0)), a(t);\n        };\n      }, t;\n    }).map(function (t) {\n      var e = x(t);\n      if (e) return e.setEndValue.bind(e);\n    }).filter(Boolean);\n    s[0] && s[0](1);\n  }\n},\n    F = function (t) {\n  return [0, 1, 4, 5, 12, 13].map(function (e) {\n    return t[e];\n  });\n},\n    P = function (t) {\n  return t.top < window.innerHeight && t.bottom > 0 && t.left < window.innerWidth && t.right > 0;\n};\n\nfunction R(t) {\n  return JSON.parse(t.dataset.flipConfig || \"{}\");\n}\n\nvar T = function (t, e) {\n  var i;\n  return u(t, ((i = {})[e[0]] = e[1], i));\n},\n    D = function (t, e) {\n  return p(e ? document.querySelectorAll('[data-portal-key=\"' + e + '\"]') : t.querySelectorAll(\"[data-flip-id]\"));\n},\n    M = function (t) {\n  return t.map(function (t) {\n    return [t, t.getBoundingClientRect()];\n  });\n},\n    k = function (l) {\n  var d,\n      h = l.cachedOrderedFlipIds,\n      g = void 0 === h ? [] : h,\n      y = l.inProgressAnimations,\n      _ = void 0 === y ? {} : y,\n      S = l.flippedElementPositionsBeforeUpdate,\n      E = void 0 === S ? {} : S,\n      A = l.flipCallbacks,\n      C = void 0 === A ? {} : A,\n      b = l.containerEl,\n      I = l.applyTransformOrigin,\n      O = l.spring,\n      w = l.debug,\n      x = l.portalKey,\n      k = l.staggerConfig,\n      j = void 0 === k ? {} : k,\n      B = l.decisionData,\n      N = void 0 === B ? {} : B,\n      L = l.handleEnterUpdateDelete,\n      q = l.onComplete,\n      W = l.onStart,\n      K = M(D((d = {\n    element: b,\n    portalKey: x\n  }).element, d.portalKey)).map(function (t) {\n    var e = t[0],\n        i = t[1],\n        n = window.getComputedStyle(e);\n    return [e.dataset.flipId, {\n      element: e,\n      rect: i,\n      opacity: parseFloat(n.opacity),\n      transform: n.transform\n    }];\n  }).reduce(T, {}),\n      X = function (t) {\n    var e = t.containerEl,\n        i = t.portalKey;\n    return i ? function (t) {\n      return function (e) {\n        return p(document.querySelectorAll('[data-portal-key=\"' + t + '\"]' + e));\n      };\n    }(i) : e ? function (t) {\n      var e = Math.random().toFixed(5);\n      return t.dataset.flipperId = e, function (i) {\n        return p(t.querySelectorAll('[data-flipper-id=\"' + e + '\"] ' + i));\n      };\n    }(e) : function () {\n      return [];\n    };\n  }({\n    containerEl: b,\n    portalKey: x\n  }),\n      Y = function (t) {\n    return function (e) {\n      return t('[data-flip-id=\"' + e + '\"]')[0];\n    };\n  }(X),\n      H = function (t) {\n    return E[t] && K[t];\n  },\n      J = Object.keys(E).concat(Object.keys(K)).filter(function (t) {\n    return !H(t);\n  }),\n      z = {\n    flipCallbacks: C,\n    getElement: Y,\n    flippedElementPositionsBeforeUpdate: E,\n    flippedElementPositionsAfterUpdate: K,\n    inProgressAnimations: _,\n    decisionData: N\n  },\n      G = function (t) {\n    var e,\n        i = t.unflippedIds,\n        n = t.flipCallbacks,\n        r = t.getElement,\n        s = t.flippedElementPositionsBeforeUpdate,\n        a = t.flippedElementPositionsAfterUpdate,\n        o = t.inProgressAnimations,\n        l = t.decisionData,\n        p = i.filter(function (t) {\n      return a[t];\n    }).filter(function (t) {\n      return n[t] && n[t].onAppear;\n    }),\n        c = i.filter(function (t) {\n      return s[t] && n[t] && n[t].onExit;\n    }),\n        u = new Promise(function (t) {\n      e = t;\n    }),\n        d = [],\n        f = 0,\n        h = c.map(function (t, i) {\n      var r = s[t].domDataForExitAnimations,\n          a = r.element,\n          p = r.parent,\n          c = r.childPosition,\n          u = c.top,\n          h = c.left,\n          g = c.width,\n          m = c.height;\n      \"static\" === getComputedStyle(p).position && (p.style.position = \"relative\"), a.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\", a.style.position = \"absolute\", a.style.top = u + \"px\", a.style.left = h + \"px\", a.style.height = m + \"px\", a.style.width = g + \"px\";\n      var v = d.filter(function (t) {\n        return t[0] === p;\n      })[0];\n      v || (v = [p, document.createDocumentFragment()], d.push(v)), v[1].appendChild(a), f += 1;\n\n      var y = function () {\n        try {\n          p.removeChild(a);\n        } catch (t) {} finally {\n          0 == (f -= 1) && e();\n        }\n      };\n\n      return o[t] = {\n        stop: y\n      }, function () {\n        return n[t].onExit(a, i, y, l);\n      };\n    });\n    return d.forEach(function (t) {\n      t[0].appendChild(t[1]);\n    }), h.length || e(), {\n      hideEnteringElements: function () {\n        p.forEach(function (t) {\n          var e = r(t);\n          e && (e.style.opacity = \"0\");\n        });\n      },\n      animateEnteringElements: function () {\n        p.forEach(function (t, e) {\n          var i = r(t);\n          i && n[t].onAppear(i, e, l);\n        });\n      },\n      animateExitingElements: function () {\n        return h.forEach(function (t) {\n          return t();\n        }), u;\n      }\n    };\n  }(u({}, z, {\n    unflippedIds: J\n  })),\n      Q = G.hideEnteringElements,\n      Z = G.animateEnteringElements,\n      $ = G.animateExitingElements,\n      tt = u({}, z, {\n    containerEl: b,\n    flippedIds: g.filter(H),\n    applyTransformOrigin: I,\n    spring: O,\n    debug: w,\n    staggerConfig: j,\n    scopedSelector: X,\n    onComplete: q\n  });\n\n  W && W(b, N);\n\n  var et = function (l) {\n    var d,\n        h = l.flippedIds,\n        g = l.flipCallbacks,\n        y = l.inProgressAnimations,\n        _ = l.flippedElementPositionsBeforeUpdate,\n        S = l.flippedElementPositionsAfterUpdate,\n        E = l.applyTransformOrigin,\n        A = l.spring,\n        C = l.getElement,\n        b = l.debug,\n        I = l.staggerConfig,\n        O = void 0 === I ? {} : I,\n        w = l.decisionData,\n        x = void 0 === w ? {} : w,\n        T = l.onComplete,\n        D = l.containerEl,\n        M = new Promise(function (t) {\n      d = t;\n    });\n    if (T && M.then(function () {\n      return T(D, x);\n    }), !h.length) return function () {\n      return d([]), M;\n    };\n    var k = [],\n        j = C(h[0]),\n        B = j ? j.ownerDocument.querySelector(\"body\") : document.querySelector(\"body\"),\n        N = (c(h), h.map(function (l) {\n      var c = _[l].rect,\n          h = S[l].rect,\n          C = _[l].opacity,\n          b = S[l].opacity,\n          I = h.width < 1 || h.height < 1,\n          O = S[l].element;\n      if (!P(c) && !P(h)) return !1;\n      if (!O) return !1;\n      var w,\n          U,\n          V,\n          T = R(O),\n          D = (V = (U = void 0 === (w = {\n        flipperSpring: A,\n        flippedSpring: T.spring\n      }) ? {} : w).flippedSpring, u({}, m.noWobble, v(U.flipperSpring), v(V))),\n          M = !0 === T.stagger ? \"default\" : T.stagger,\n          j = {\n        element: O,\n        id: l,\n        stagger: M,\n        springConfig: D\n      };\n      if (g[l] && g[l].shouldFlip && !g[l].shouldFlip(x.previous, x.current)) return !1;\n      var L = Math.abs(c.left - h.left) + Math.abs(c.top - h.top),\n          q = Math.abs(c.width - h.width) + Math.abs(c.height - h.height),\n          W = Math.abs(b - C);\n      if (0 === c.height && 0 === h.height || 0 === c.width && 0 === h.width || L < .5 && q < .5 && W < .01) return !1;\n      var K = t(S[l].transform),\n          X = {\n        matrix: K\n      },\n          Y = {\n        matrix: []\n      },\n          H = [K];\n      T.translate && (H.push(e(c.left - h.left)), H.push(i(c.top - h.top))), T.scale && (H.push(n(Math.max(c.width, 1) / Math.max(h.width, 1))), H.push(r(Math.max(c.height, 1) / Math.max(h.height, 1)))), T.opacity && (Y.opacity = C, X.opacity = b);\n      var J = [];\n\n      if (!g[l] || !g[l].shouldInvert || g[l].shouldInvert(x.previous, x.current)) {\n        var z = function (t, e) {\n          return p(t.querySelectorAll('[data-inverse-flip-id=\"' + e + '\"]'));\n        }(O, l);\n\n        J = z.map(function (t) {\n          return [t, R(t)];\n        });\n      }\n\n      Y.matrix = F(H.reduce(s)), X.matrix = F(X.matrix);\n\n      var G,\n          Q = function (t) {\n        var e = t.element,\n            i = t.invertedChildren,\n            n = t.body;\n        return function (t) {\n          var r = t.matrix,\n              s = t.opacity,\n              o = t.forceMinVals;\n\n          if (a(s) && (e.style.opacity = s + \"\"), o && (e.style.minHeight = \"1px\", e.style.minWidth = \"1px\"), r) {\n            var l = function (t) {\n              return \"matrix(\" + t.join(\", \") + \")\";\n            }(r);\n\n            e.style.transform = l, i && function (t) {\n              var e = t.matrix,\n                  i = t.body;\n              t.invertedChildren.forEach(function (t) {\n                var n = t[0],\n                    r = t[1];\n\n                if (i.contains(n)) {\n                  var s = e[0],\n                      a = e[3],\n                      o = e[5],\n                      l = {\n                    translateX: 0,\n                    translateY: 0,\n                    scaleX: 1,\n                    scaleY: 1\n                  },\n                      p = \"\";\n                  r.translate && (l.translateX = -e[4] / s, l.translateY = -o / a, p += \"translate(\" + l.translateX + \"px, \" + l.translateY + \"px)\"), r.scale && (l.scaleX = 1 / s, l.scaleY = 1 / a, p += \" scale(\" + l.scaleX + \", \" + l.scaleY + \")\"), n.style.transform = p;\n                }\n              });\n            }({\n              invertedChildren: i,\n              matrix: r,\n              body: n\n            });\n          }\n        };\n      }({\n        element: O,\n        invertedChildren: J,\n        body: B\n      });\n\n      if (g[l] && g[l].onComplete) {\n        var Z = g[l].onComplete;\n\n        G = function () {\n          return Z(O, x);\n        };\n      }\n\n      var $ = a(Y.opacity) && a(X.opacity) && Y.opacity !== X.opacity,\n          tt = !1;\n      return u({}, j, {\n        stagger: M,\n        springConfig: D,\n        getOnUpdateFunc: function (t) {\n          var e = t.spring,\n              i = t.onAnimationEnd;\n          return y[l] = {\n            destroy: e.destroy.bind(e),\n            onAnimationEnd: i\n          }, function (t) {\n            g[l] && g[l].onSpringUpdate && g[l].onSpringUpdate(t.getCurrentValue()), tt || (tt = !0, g[l] && g[l].onStart && g[l].onStart(O, x));\n            var e = t.getCurrentValue();\n\n            if (B.contains(O)) {\n              var i = {\n                matrix: []\n              };\n              i.matrix = Y.matrix.map(function (t, i) {\n                return f(t, X.matrix[i], e);\n              }), $ && (i.opacity = f(Y.opacity, X.opacity, e)), Q(i);\n            } else t.destroy();\n          };\n        },\n        initializeFlip: function () {\n          Q({\n            matrix: Y.matrix,\n            opacity: $ ? Y.opacity : void 0,\n            forceMinVals: I\n          }), g[l] && g[l].onStartImmediate && g[l].onStartImmediate(O, x), T.transformOrigin ? O.style.transformOrigin = T.transformOrigin : E && (O.style.transformOrigin = \"0 0\"), J.forEach(function (t) {\n            var e = t[0],\n                i = t[1];\n            i.transformOrigin ? e.style.transformOrigin = i.transformOrigin : E && (e.style.transformOrigin = \"0 0\");\n          });\n        },\n        onAnimationEnd: function (t) {\n          delete y[l], o(G) && G(), O.style.transform = \"\", J.forEach(function (t) {\n            t[0].style.transform = \"\";\n          }), I && O && (O.style.minHeight = \"\", O.style.minWidth = \"\"), t || (k.push(l), k.length >= N.length && d(k));\n        },\n        delayUntil: T.delayUntil\n      });\n    }).filter(Boolean));\n    if (N.forEach(function (t) {\n      return (0, t.initializeFlip)();\n    }), b) return function () {};\n    var L = N.filter(function (t) {\n      return t.delayUntil && (e = t.delayUntil, N.filter(function (t) {\n        return t.id === e;\n      }).length);\n      var e;\n    }),\n        q = {},\n        W = {},\n        K = {};\n    L.forEach(function (t) {\n      t.stagger ? (K[t.stagger] = !0, W[t.delayUntil] ? W[t.delayUntil].push(t.stagger) : W[t.delayUntil] = [t.stagger]) : q[t.delayUntil] ? q[t.delayUntil].push(t) : q[t.delayUntil] = [t];\n    });\n    var X = N.filter(function (t) {\n      return t.stagger;\n    }).reduce(function (t, e) {\n      return t[e.stagger] ? t[e.stagger].push(e) : t[e.stagger] = [e], t;\n    }, {}),\n        Y = N.filter(function (t) {\n      return -1 === L.indexOf(t);\n    });\n    return Y.forEach(function (t) {\n      t.onSpringActivate = function () {\n        q[t.id] && q[t.id].forEach(U), W[t.id] && Object.keys(W[t.id].reduce(function (t, e) {\n          var i;\n          return u(t, ((i = {})[e] = !0, i));\n        }, {})).forEach(function (t) {\n          V(X[t], O[t]);\n        });\n      };\n    }), function () {\n      return N.length || d([]), Y.filter(function (t) {\n        return !t.stagger;\n      }).forEach(U), Object.keys(X).forEach(function (t) {\n        K[t] || V(X[t], O[t]);\n      }), M;\n    };\n  }(tt);\n\n  L ? L({\n    hideEnteringElements: Q,\n    animateEnteringElements: Z,\n    animateExitingElements: $,\n    animateFlippedElements: et\n  }) : (Q(), $().then(Z), et());\n},\n    j = function (t) {\n  var e = t.element,\n      i = t.flipCallbacks,\n      n = void 0 === i ? {} : i,\n      r = t.inProgressAnimations,\n      s = void 0 === r ? {} : r,\n      a = D(e, t.portalKey),\n      o = p(e.querySelectorAll(\"[data-inverse-flip-id]\")),\n      l = {},\n      c = [],\n      d = {};\n  a.filter(function (t) {\n    return n && n[t.dataset.flipId] && n[t.dataset.flipId].onExit;\n  }).forEach(function (t) {\n    var e = t.parentNode;\n\n    if (t.closest) {\n      var i = t.closest(\"[data-exit-container]\");\n      i && (e = i);\n    }\n\n    var n = c.findIndex(function (t) {\n      return t[0] === e;\n    });\n    -1 === n && (c.push([e, e.getBoundingClientRect()]), n = c.length - 1), l[t.dataset.flipId] = c[n][1], d[t.dataset.flipId] = e;\n  });\n  var f = M(a),\n      h = f.map(function (t) {\n    var e = t[0],\n        i = t[1],\n        r = {};\n\n    if (n && n[e.dataset.flipId] && n[e.dataset.flipId].onExit) {\n      var s = l[e.dataset.flipId];\n      u(r, {\n        element: e,\n        parent: d[e.dataset.flipId],\n        childPosition: {\n          top: i.top - s.top,\n          left: i.left - s.left,\n          width: i.width,\n          height: i.height\n        }\n      });\n    }\n\n    return [e.dataset.flipId, {\n      rect: i,\n      opacity: parseFloat(window.getComputedStyle(e).opacity || \"1\"),\n      domDataForExitAnimations: r\n    }];\n  }).reduce(T, {});\n  return function (t, e) {\n    Object.keys(t).forEach(function (e) {\n      t[e].destroy && t[e].destroy(), t[e].onAnimationEnd && t[e].onAnimationEnd(!0), delete t[e];\n    }), e.forEach(function (t) {\n      t.style.transform = \"\", t.style.opacity = \"\";\n    });\n  }(s, a.concat(o)), {\n    flippedElementPositions: h,\n    cachedOrderedFlipIds: f.map(function (t) {\n      return t[0].dataset.flipId;\n    })\n  };\n},\n    B = function () {\n  function t(t) {\n    this.applyTransformOrigin = !0, u(this, t), this.inProgressAnimations = {}, this.flipCallbacks = {}, this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this), this.update = this.update.bind(this), this.addFlipped = this.addFlipped.bind(this), this.addInverted = this.addInverted.bind(this);\n  }\n\n  var e = t.prototype;\n  return e.recordBeforeUpdate = function () {\n    this.snapshot = j({\n      element: this.element,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations\n    });\n  }, e.update = function (t, e) {\n    this.snapshot && (k({\n      flippedElementPositionsBeforeUpdate: this.snapshot.flippedElementPositions,\n      cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n      containerEl: this.element,\n      inProgressAnimations: this.inProgressAnimations,\n      flipCallbacks: this.flipCallbacks,\n      applyTransformOrigin: this.applyTransformOrigin,\n      spring: this.spring,\n      debug: this.debug,\n      staggerConfig: this.staggerConfig,\n      handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n      decisionData: {\n        previous: t,\n        current: e\n      },\n      onComplete: this.onComplete,\n      onStart: this.onStart\n    }), delete this.snapshot);\n  }, e.addFlipped = function (t) {\n    var e = t.element,\n        i = t.flipId,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin,\n        o = t.spring,\n        l = t.stagger,\n        p = t.delayUntil,\n        c = t.onAppear,\n        d = t.onStart,\n        f = t.onSpringUpdate,\n        h = t.onComplete,\n        g = t.onExit,\n        m = t.shouldFlip,\n        v = t.shouldInvert;\n    if (!e) throw new Error(\"no element provided\");\n    if (!i) throw new Error(\"No flipId provided\");\n    var y = {\n      scale: s,\n      translate: r,\n      opacity: n,\n      transformOrigin: a,\n      spring: o,\n      stagger: l,\n      delayUntil: p\n    };\n    y.scale || y.translate || y.opacity || u(y, {\n      translate: !0,\n      scale: !0,\n      opacity: !0\n    }), i && (e.dataset.flipId = String(i)), e.dataset.flipConfig = JSON.stringify(y), this.flipCallbacks[i] = {\n      shouldFlip: m,\n      shouldInvert: v,\n      onAppear: c,\n      onStart: d,\n      onSpringUpdate: f,\n      onComplete: h,\n      onExit: g\n    };\n  }, e.addInverted = function (t) {\n    var e = t.element,\n        i = t.parent,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin;\n    if (!e) throw new Error(\"no element provided\");\n    if (!i) throw new Error(\"parent must be provided\");\n    var o = i.dataset.flipId,\n        l = {\n      scale: s,\n      translate: r,\n      opacity: n,\n      transformOrigin: a\n    };\n    l.scale || l.translate || l.opacity || u(l, {\n      translate: !0,\n      scale: !0,\n      opacity: !0\n    }), e.dataset.inverseFlipId = o, e.dataset.flipConfig = JSON.stringify(l);\n  }, t;\n}(),\n    N = new O(),\n    L = function (t) {\n  var e = t.values,\n      i = t.onUpdate,\n      n = t.delay,\n      r = void 0 === n ? 0 : n,\n      s = t.onComplete,\n      a = u({}, m.noWobble, v(t.config)),\n      o = a.overshootClamping,\n      l = N.createSpring(a.stiffness, a.damping);\n  return l.setOvershootClampingEnabled(!!o), l.addListener({\n    onSpringAtRest: function (t) {\n      s && s(), t.destroy();\n    },\n    onSpringUpdate: function (t) {\n      var n = t.getCurrentValue();\n      if (!e) return i(n);\n      var r = Object.keys(e).map(function (t) {\n        return [t, f(e[t][0], e[t][1], n)];\n      }).reduce(function (t, e) {\n        var i;\n        return Object.assign(t, ((i = {})[e[0]] = e[1], i));\n      }, {});\n      i(r);\n    }\n  }), r ? setTimeout(function () {\n    l.setEndValue(1);\n  }, r) : l.setEndValue(1), l;\n};\n\nexport { B as Flipper, g as constants, j as getFlippedElementPositionsBeforeUpdate, k as onFlipKeyUpdate, L as spring, h as utilities };","map":{"version":3,"mappings":"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","names":["isNumber","x","isFunction","isObject","Object","prototype","toString","call","toArray","arrayLike","Array","slice","apply","getDuplicateValsAsStrings","arr","obj","reduce","acc","curr","keys","filter","val","assign","target","forEach","arg","nextKey","hasOwnProperty","_onFrame","tweenProp","start","end","position","DATA_INVERSE_FLIP_ID","DATA_FLIP_COMPONENT_ID","DATA_FLIP_CONFIG","DATA_PORTAL_KEY","DATA_EXIT_CONTAINER","springPresets","noWobble","stiffness","damping","gentle","veryGentle","wobbly","stiff","normalizeSpring","spring","indexOf","window","requestAnimationFrame","callback","setTimeout","Date","now","performanceNow","performance","removeFirst","array","item","idx","splice","AnimationLooper","run","onFrame","_this","springSystem","loop","PhysicsState","this","velocity","ID","Spring","_id","_springSystem","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_cachedSpringConfig","getId","destroy","deregisterSpring","setSpringConfig","springConfig","_springConfig","getCurrentValue","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","prevEndValue","isAtRest","activateSpring","i","len","length","onChange","onSpringEndStateChange","e","setVelocity","setCurrentValue","currentValue","listener","onSpringUpdate","setAtRest","setOvershootClampingEnabled","enabled","isOvershooting","tension","advance","time","realDeltaTime","adjustedDeltaTime","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","friction","tempPosition","tempVelocity","_interpolate","notifyActivate","notifyAtRest","notifyPositionUpdated","Boolean","onSpringActivate","_this2","_onActivateCalled","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","addListener","newListener","push","addOneTimeListener","key","func","removeListener","listenerToRemove","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","createSpring","createSpringWithConfig","registerSpring","getIsIdle","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","createSuspendedSpring","flipData","overshootClamping","getOnUpdateFunc","onAnimationEnd","flipped","createStaggeredSprings","flippedArray","staggerConfig","reverse","speedConfig","normalizedSpeed","speed","min","max","nextThreshold","setEndValueFuncs","map","cachedGetOnUpdate","onUpdate","args","bind","convertMatrix3dArrayTo2dArray","matrix","index","rectInViewport","top","innerHeight","bottom","t","left","innerWidth","right","extractFlipConfig","element","JSON","parse","dataset","flipConfig","addTupleToObject","getAllElements","portalKey","document","querySelectorAll","getRects","flippedElements","child","getBoundingClientRect","onFlipKeyUpdate","cachedOrderedFlipIds","h","y","inProgressAnimations","S","flippedElementPositionsBeforeUpdate","A","flipCallbacks","containerEl","applyTransformOrigin","debug","k","B","decisionData","handleEnterUpdateDelete","onComplete","onStart","flippedElementPositionsAfterUpdate","childBCR","computedStyle","getComputedStyle","flipId","rect","opacity","parseFloat","transform","scopedSelector","selector","createPortalScopedSelector","tempFlipperId","random","toFixed","flipperId","createFlipperScopedSelector","createScopedSelector","getElement","id","createGetElementFunc","isFlipped","unflippedIds","concat","baseArgs","closureResolve","animatedEnteringElementIds","onAppear","animatedExitingElementIds","onExit","promiseToReturn","Promise","resolve","fragmentTuples","exitingElementCount","onExitCallbacks","domDataForExitAnimations","parent","childPosition","width","height","style","fragmentTuple","createDocumentFragment","appendChild","stop","removeChild","DOMException","hideEnteringElements","animateEnteringElements","animateExitingElements","c","animateUnflippedElements","animateFlippedElementsArgs","flippedIds","flip","I","w","flipCompletedPromise","then","completedAnimationIds","firstElement","body","ownerDocument","querySelector","flipDataArray","prevRect","currentRect","prevOpacity","currentOpacity","needsForcedMinVals","flippedSpring","flipperSpring","stagger","toReturn","shouldFlip","previous","current","translateDifference","scaleDifference","opacityDifference","currentTransform","Rematrix","toVals","fromVals","transformsArray","translate","scale","invertedChildren","shouldInvert","invertedChildElements","getInvertedChildren","applyStyles","forceMinVals","minHeight","minWidth","stringTransform","join","convertMatrix2dArrayToString","childFlipConfig","contains","scaleX","scaleY","translateY","inverseVals","translateX","transformString","invertTransformsForChildren","createApplyStylesFunc","cachedOnComplete","animateOpacity","onStartCalled","vals","fromVal","initializeFlip","undefined","onStartImmediate","transformOrigin","isCancellation","delayUntil","delayedFlip","f","delayUntilSprings","delayUntilStaggers","delayedStaggerKeys","staggerDict","immediateFlip","staggerKey","animateFlippedElements","getFlippedElementPositionsBeforeUpdate","r","inverseFlippedElements","childIdsToParentBCRs","parentBCRs","childIdsToParents","el","parentNode","closest","exitContainer","bcrIndex","findIndex","n","filteredFlippedElements","flippedElementPositions","parentBCR","animatingElements","cancelInProgressAnimations","Flipper","options","recordBeforeUpdate","update","addFlipped","addInverted","snapshot","prevDecisionData","currentDecisionData","Error","String","stringify","inverseFlipId","createSimpleSpring","values","delay","config","springVal","currentValues","value"],"sources":["../src/utilities/index.ts","../src/forked-rebound/onFrame.js","../src/constants.ts","../src/springSettings/index.ts","../src/forked-rebound/util.js","../src/forked-rebound/Loopers.js","../src/forked-rebound/Spring.js","../src/forked-rebound/SpringSystem.js","../src/flip/animateFlippedElements/spring/index.ts","../src/flip/animateFlippedElements/index.ts","../src/flip/getFlippedElementPositions/utilities.ts","../src/flip/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsAfterUpdate/index.ts","../src/flip/animateUnflippedElements/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.ts","../src/Flipper.ts","../src/Spring/index.ts"],"sourcesContent":["import { IndexableObject } from './types'\n\nexport const isNumber = (x: any) => typeof x === 'number'\n\nexport const isFunction = (x: any) => typeof x === 'function'\n\nexport const isObject = (x: any) =>\n  Object.prototype.toString.call(x) === '[object Object]'\n\nexport const toArray = (arrayLike: ArrayLike<any>) =>\n  Array.prototype.slice.apply(arrayLike)\n\nexport const getDuplicateValsAsStrings = (arr: string[]): string[] => {\n  const baseObj: IndexableObject = {}\n  const obj = arr.reduce((acc, curr) => {\n    acc[curr] = (acc[curr] || 0) + 1\n    return acc\n  }, baseObj)\n  return Object.keys(obj).filter(val => obj[val] > 1)\n}\n\n// tslint only likes this with a regular function, not an arrow function\nexport function assign(target: IndexableObject, ...args: IndexableObject[]) {\n  args.forEach(arg => {\n    if (!arg) {\n      return\n    }\n    // Skip over if undefined or null\n    for (const nextKey in arg) {\n      // Avoid bugs when hasOwnProperty is shadowed\n      if (Object.prototype.hasOwnProperty.call(arg, nextKey)) {\n        target[nextKey] = arg[nextKey]\n      }\n    }\n  })\n  return target\n}\n\nexport const tweenProp = (start: number, end: number, position: number) =>\n  start + (end - start) * position\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nlet _onFrame\nif (typeof window !== \"undefined\") {\n  _onFrame = window.requestAnimationFrame\n}\n\n_onFrame =\n  _onFrame ||\n  function(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\nexport default _onFrame\n","export const DATA_FLIP_ID = 'data-flip-id'\nexport const DATA_INVERSE_FLIP_ID = 'data-inverse-flip-id'\nexport const DATA_FLIP_COMPONENT_ID = 'data-flip-component-id'\nexport const DATA_FLIP_CONFIG = 'data-flip-config'\nexport const DATA_PORTAL_KEY = 'data-portal-key'\nexport const DATA_EXIT_CONTAINER = 'data-exit-container'\n","import { isObject, assign } from '../utilities'\nimport { SpringPresets, SpringConfig, SpringOption } from './types'\n\n// adapted from\n// https://github.com/chenglou/react-motion/blob/master/src/presets.js\nexport const springPresets: SpringPresets = {\n  noWobble: { stiffness: 200, damping: 26 },\n  gentle: { stiffness: 120, damping: 14 },\n  veryGentle: { stiffness: 130, damping: 17 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 260, damping: 26 }\n}\n\nfunction argIsSpringConfig(\n  arg: SpringConfig | keyof SpringPresets | undefined\n): arg is SpringConfig {\n  return isObject(arg)\n}\n\nexport const normalizeSpring = (\n  spring?: SpringConfig | keyof SpringPresets | any\n) => {\n  if (argIsSpringConfig(spring)) {\n    return spring\n  } else if (Object.keys(springPresets).indexOf(spring) > -1) {\n    return springPresets[spring]\n  } else {\n    return {}\n  }\n}\n\nexport const getSpringConfig = ({\n  flipperSpring,\n  flippedSpring\n}: { flipperSpring?: SpringOption; flippedSpring?: SpringOption } = {}) => {\n  return assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(flipperSpring),\n    normalizeSpring(flippedSpring)\n  )\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nexport { default as onFrame } from './onFrame'\n\nconst start = Date.now()\nexport const performanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function'\n    ? () => performance.now()\n    : () => Date.now() - start\n\n// Lop off the first occurence of the reference in the Array.\nexport function removeFirst(array, item) {\n  const idx = array.indexOf(item)\n  idx !== -1 && array.splice(idx, 1)\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { onFrame, performanceNow } from \"./util\"\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\nexport class AnimationLooper {\n  run() {\n    onFrame(() => {\n      this.springSystem.loop(performanceNow())\n    })\n  }\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { removeFirst } from './util'\n\nclass PhysicsState {\n  constructor() {\n    this.position = 0\n    this.velocity = 0\n  }\n}\n\nlet ID = 0\nconst MAX_DELTA_TIME_SEC = 0.064\nconst SOLVER_TIMESTEP_SEC = 0.001\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\nclass Spring {\n  constructor(springSystem) {\n    this._id = `s${ID++}`\n    this._springSystem = springSystem\n\n    this.listeners = []\n    this._startValue = 0\n\n    this._currentState = new PhysicsState()\n    this._displacementFromRestThreshold = 0.001\n    this._endValue = 0\n    this._overshootClampingEnabled = false\n    this._previousState = new PhysicsState()\n    this._restSpeedThreshold = 0.001\n\n    this._tempState = new PhysicsState()\n    this._timeAccumulator = 0\n    this._wasAtRest = true\n    // hack from alex -- only call 1x\n    this._onActivateCalled\n    this._cachedSpringConfig = {}\n  }\n\n  getId() {\n    return this._id\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n  destroy() {\n    this.listeners = []\n    this._springSystem.deregisterSpring(this)\n  }\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n  setSpringConfig(springConfig) {\n    this._springConfig = springConfig\n    return this\n  }\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n  getCurrentValue() {\n    return this._currentState.position\n  }\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n  getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position)\n  }\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n  setEndValue(endValue) {\n    if (endValue === this._endValue) return this\n    this.prevEndValue = endValue\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this\n    }\n    this._startValue = this.getCurrentValue()\n    this._endValue = endValue\n    this._springSystem.activateSpring(this.getId())\n    for (let i = 0, len = this.listeners.length; i < len; i++) {\n      const listener = this.listeners[i]\n      const onChange = listener.onSpringEndStateChange\n      onChange && onChange(this)\n    }\n    return this\n  }\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n  setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this\n    }\n    this._currentState.velocity = velocity\n    this._springSystem.activateSpring(this.getId())\n    return this\n  }\n\n  setCurrentValue(currentValue) {\n    this._startValue = currentValue\n    this._currentState.position = currentValue\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i]\n      listener.onSpringUpdate && listener.onSpringUpdate(this)\n    }\n    return this\n  }\n\n  setAtRest() {\n    this._endValue = this._currentState.position\n    this._tempState.position = this._currentState.position\n    this._currentState.velocity = 0\n    return this\n  }\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n  setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled\n    return this\n  }\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n  isOvershooting() {\n    const start = this._startValue\n    const end = this._endValue\n    return (\n      this._springConfig.tension > 0 &&\n      ((start < end && this.getCurrentValue() > end) ||\n        (start > end && this.getCurrentValue() < end))\n    )\n  }\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n  advance(time, realDeltaTime) {\n    let isAtRest = this.isAtRest()\n\n    if (isAtRest && this._wasAtRest) {\n      return\n    }\n\n    let adjustedDeltaTime = realDeltaTime\n    if (realDeltaTime > MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = MAX_DELTA_TIME_SEC\n    }\n\n    this._timeAccumulator += adjustedDeltaTime\n\n    const tension = this._springConfig.tension\n    const friction = this._springConfig.friction\n    let position = this._currentState.position\n    let velocity = this._currentState.velocity\n    let tempPosition = this._tempState.position\n    let tempVelocity = this._tempState.velocity\n    let aVelocity\n    let aAcceleration\n    let bVelocity\n    let bAcceleration\n    let cVelocity\n    let cAcceleration\n    let dVelocity\n    let dAcceleration\n    let dxdt\n    let dvdt\n\n    while (this._timeAccumulator >= SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= SOLVER_TIMESTEP_SEC\n\n      if (this._timeAccumulator < SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position\n        this._previousState.velocity = velocity\n      }\n\n      aVelocity = velocity\n      aAcceleration =\n        tension * (this._endValue - tempPosition) - friction * velocity\n\n      tempPosition = position + aVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + aAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      bVelocity = tempVelocity\n      bAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + bVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + bAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      cVelocity = tempVelocity\n      cAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + cVelocity * SOLVER_TIMESTEP_SEC\n      tempVelocity = velocity + cAcceleration * SOLVER_TIMESTEP_SEC\n      dVelocity = tempVelocity\n      dAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      dxdt =\n        (1.0 / 6.0) * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity)\n      dvdt =\n        (1.0 / 6.0) *\n        (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration)\n\n      position += dxdt * SOLVER_TIMESTEP_SEC\n      velocity += dvdt * SOLVER_TIMESTEP_SEC\n    }\n\n    this._tempState.position = tempPosition\n    this._tempState.velocity = tempVelocity\n\n    this._currentState.position = position\n    this._currentState.velocity = velocity\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / SOLVER_TIMESTEP_SEC)\n    }\n\n    if (\n      this.isAtRest() ||\n      (this._overshootClampingEnabled && this.isOvershooting())\n    ) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue\n        this._currentState.position = this._endValue\n      } else {\n        this._endValue = this._currentState.position\n        this._startValue = this._endValue\n      }\n      this.setVelocity(0)\n      isAtRest = true\n    }\n\n    let notifyActivate = false\n    if (this._wasAtRest) {\n      this._wasAtRest = false\n      notifyActivate = true\n    }\n\n    let notifyAtRest = false\n    if (isAtRest) {\n      this._wasAtRest = true\n      notifyAtRest = true\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest)\n  }\n\n  notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    this.listeners.filter(Boolean).forEach(listener => {\n      if (\n        notifyActivate &&\n        listener.onSpringActivate &&\n        !this._onActivateCalled\n      ) {\n        listener.onSpringActivate(this)\n        this._onActivateCalled = true\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this)\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this)\n      }\n    })\n  }\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n  systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest()\n  }\n\n  wasAtRest() {\n    return this._wasAtRest\n  }\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n  isAtRest() {\n    const isAtRest =\n      Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n      (this.getDisplacementDistanceForState(this._currentState) <=\n        this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0)\n    return isAtRest\n  }\n\n  _interpolate(alpha) {\n    this._currentState.position =\n      this._currentState.position * alpha +\n      this._previousState.position * (1 - alpha)\n    this._currentState.velocity =\n      this._currentState.velocity * alpha +\n      this._previousState.velocity * (1 - alpha)\n  }\n\n  addListener(newListener) {\n    this.listeners.push(newListener)\n    return this\n  }\n\n  addOneTimeListener(newListener) {\n    const oneTimeFunc = func => (...args) => {\n      func(...args)\n      this.removeListener(newListener)\n    }\n    Object.keys(newListener).forEach(key => {\n      newListener[key] = oneTimeFunc(newListener[key])\n    })\n    this.listeners.push(newListener)\n    return this\n  }\n\n  removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove)\n    return this\n  }\n}\n\nexport default Spring\n","//\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport { AnimationLooper } from './Loopers'\nimport Spring from './Spring'\nimport { removeFirst } from './util'\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\nclass SpringSystem {\n  constructor(looper) {\n    this.looper = looper || new AnimationLooper()\n    this.looper.springSystem = this\n\n    this.listeners = []\n    this._activeSprings = []\n    this._idleSpringIndices = []\n    this._isIdle = true\n    this._lastTimeMillis = -1\n    this._springRegistry = {}\n  }\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n  createSpring(tension, friction) {\n    return this.createSpringWithConfig({ tension, friction })\n  }\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n  createSpringWithConfig(springConfig) {\n    const spring = new Spring(this)\n    this.registerSpring(spring)\n    spring.setSpringConfig(springConfig)\n    return spring\n  }\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n  getIsIdle() {\n    return this._isIdle\n  }\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n  registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring\n  }\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n  deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring)\n    delete this._springRegistry[spring.getId()]\n  }\n\n  advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop()\n    }\n    this._activeSprings.filter(Boolean).forEach(spring => {\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0)\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring))\n      }\n    })\n\n    while (this._idleSpringIndices.length > 0) {\n      const idx = this._idleSpringIndices.pop()\n      idx >= 0 && this._activeSprings.splice(idx, 1)\n    }\n  }\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n  loop(currentTimeMillis) {\n    let listener\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1\n    }\n    const ellapsedMillis = currentTimeMillis - this._lastTimeMillis\n    this._lastTimeMillis = currentTimeMillis\n\n    let i = 0\n    const len = this.listeners.length\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this)\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis)\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true\n      this._lastTimeMillis = -1\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this)\n    }\n\n    if (!this._isIdle) {\n      this.looper.run()\n    }\n  }\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n  activateSpring(springId) {\n    const spring = this._springRegistry[springId]\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring)\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false\n      this.looper.run()\n    }\n  }\n}\n\nexport default SpringSystem\n","import { SpringSystem } from '../../../forked-rebound'\nimport { StaggerConfigValue } from '../../../types'\nimport { FlipData, FlipDataArray } from '../types'\nimport {\n  SpringSystemInterface,\n  AddListenerArgs\n} from '../../../forked-rebound/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\nexport const createSuspendedSpring = (flipData: FlipData) => {\n  const {\n    springConfig: { stiffness, damping, overshootClamping },\n    getOnUpdateFunc,\n    onAnimationEnd,\n    onSpringActivate\n  } = flipData\n\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  const onSpringAtRest = () => {\n    // prevent SpringSystem from caching unused springs\n    spring.destroy()\n    onAnimationEnd()\n  }\n\n  const springConfig: AddListenerArgs = {\n    onSpringActivate,\n    onSpringAtRest,\n    onSpringUpdate: getOnUpdateFunc({\n      spring,\n      onAnimationEnd\n    })\n  }\n\n  spring.addListener(springConfig)\n  return spring\n}\n\nexport const createSpring = (flipped: FlipData) => {\n  const spring = createSuspendedSpring(flipped)\n  spring.setEndValue(1)\n  return spring\n}\n\nexport const normalizeSpeed = (speedConfig: number | undefined) => {\n  if (typeof speedConfig !== 'number') return 1.1\n  return 1 + Math.min(Math.max(speedConfig * 5, 0), 5)\n}\n\nexport const createStaggeredSprings = (\n  flippedArray: FlipDataArray,\n  staggerConfig: StaggerConfigValue = {}\n) => {\n  if (!flippedArray || !flippedArray.length) {\n    return\n  }\n\n  if (staggerConfig.reverse) {\n    flippedArray.reverse()\n  }\n\n  const normalizedSpeed = normalizeSpeed(staggerConfig.speed)\n\n  const nextThreshold = 1 / Math.max(Math.min(flippedArray.length, 100), 10)\n\n  const setEndValueFuncs = flippedArray\n    .map((flipped, i) => {\n      const cachedGetOnUpdate = flipped.getOnUpdateFunc\n\n      // modify the update function to adjust\n      // the end value of the trailing Flipped component\n      flipped.getOnUpdateFunc = args => {\n        const onUpdate = cachedGetOnUpdate(args)\n        return spring => {\n          let currentValue = spring.getCurrentValue()\n          // make sure trailing animations complete\n          currentValue =\n            currentValue < 0.01 ? 0 : currentValue > 0.99 ? 1 : currentValue\n\n          const updateTrailingAnimation = currentValue >= nextThreshold\n          if (updateTrailingAnimation) {\n            if (setEndValueFuncs[i + 1]) {\n              setEndValueFuncs[i + 1]!(\n                Math.max(Math.min(currentValue * normalizedSpeed, 1), 0)\n              )\n            }\n          }\n          // now call the actual update function\n          onUpdate(spring)\n        }\n      }\n      return flipped\n    })\n    .map(flipped => {\n      const spring = createSuspendedSpring(flipped)\n      if (!spring) {\n        return\n      }\n      return spring.setEndValue.bind(spring)\n    })\n    .filter(Boolean)\n\n  if (setEndValueFuncs[0]) {\n    setEndValueFuncs[0]!(1)\n  }\n}\n","import * as Rematrix from 'rematrix'\nimport { getSpringConfig } from '../../springSettings'\nimport {\n  toArray,\n  isFunction,\n  isNumber,\n  getDuplicateValsAsStrings,\n  assign,\n  tweenProp\n} from '../../utilities'\nimport * as constants from '../../constants'\nimport {\n  GetOnUpdateFunc,\n  OnUpdate,\n  Matrix,\n  InvertedChildren,\n  AnimateFlippedElementsArgs,\n  AnimatedVals,\n  FlipDataArray,\n  FlipData,\n  InitializeFlip\n} from './types'\nimport { BoundingClientRect } from '../getFlippedElementPositions/types'\nimport { FlippedIds } from '../types'\nimport { createSpring, createStaggeredSprings } from './spring'\nimport { IndexableObject } from '../../utilities/types'\nimport { FlipId } from '../../types'\n\n// 3d transforms were causing weird issues in chrome,\n// especially when opacity was also being tweened,\n// so convert to a 2d matrix\nexport const convertMatrix3dArrayTo2dArray = (matrix: Matrix): Matrix =>\n  [0, 1, 4, 5, 12, 13].map(index => matrix[index])\n\nexport const convertMatrix2dArrayToString = (matrix: Matrix) =>\n  `matrix(${matrix.join(', ')})`\n\nexport const invertTransformsForChildren = ({\n  invertedChildren,\n  matrix,\n  body\n}: {\n  matrix: Matrix\n  body: HTMLBodyElement\n  invertedChildren: InvertedChildren\n}) => {\n  invertedChildren.forEach(([child, childFlipConfig]) => {\n    if (!body.contains(child)) {\n      return\n    }\n    const scaleX = matrix[0]\n    const scaleY = matrix[3]\n    const translateX = matrix[4]\n    const translateY = matrix[5]\n\n    const inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 }\n    let transformString = ''\n    if (childFlipConfig.translate) {\n      inverseVals.translateX = -translateX / scaleX\n      inverseVals.translateY = -translateY / scaleY\n      transformString += `translate(${inverseVals.translateX}px, ${inverseVals.translateY}px)`\n    }\n    if (childFlipConfig.scale) {\n      inverseVals.scaleX = 1 / scaleX\n      inverseVals.scaleY = 1 / scaleY\n      transformString += ` scale(${inverseVals.scaleX}, ${inverseVals.scaleY})`\n    }\n    child.style.transform = transformString\n  })\n}\n\nexport const createApplyStylesFunc = ({\n  element,\n  invertedChildren,\n  body\n}: {\n  element: HTMLElement\n  invertedChildren: InvertedChildren\n  body: HTMLBodyElement\n}) => ({\n  matrix,\n  opacity,\n  forceMinVals\n}: {\n  matrix: Matrix\n  opacity?: number\n  forceMinVals?: boolean\n}) => {\n  if (isNumber(opacity)) {\n    element.style.opacity = opacity + ''\n  }\n\n  if (forceMinVals) {\n    element.style.minHeight = '1px'\n    element.style.minWidth = '1px'\n  }\n\n  if (!matrix) {\n    return\n  }\n\n  const stringTransform = convertMatrix2dArrayToString(matrix)\n\n  // always apply transform, even if identity,\n  // because identity might be the starting state in a FLIP\n  // transition, if the element's position is controlled by transforms\n  element.style.transform = stringTransform\n\n  if (invertedChildren) {\n    invertTransformsForChildren({\n      invertedChildren,\n      matrix,\n      body\n    })\n  }\n}\n\nexport const rectInViewport = ({\n  top,\n  bottom,\n  left,\n  right\n}: BoundingClientRect) => {\n  return (\n    top < window.innerHeight &&\n    bottom > 0 &&\n    left < window.innerWidth &&\n    right > 0\n  )\n}\n\nconst getInvertedChildren = (element: HTMLElement, id: string) =>\n  toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}=\"${id}\"]`)\n  )\n\nfunction extractFlipConfig(element: HTMLElement) {\n  const flipConfig = JSON.parse(element.dataset.flipConfig || '{}')\n  return flipConfig\n}\n\nexport default ({\n  flippedIds,\n  flipCallbacks,\n  inProgressAnimations,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  applyTransformOrigin,\n  spring,\n  getElement,\n  debug,\n  staggerConfig = {},\n  decisionData = {},\n  onComplete,\n  containerEl\n}: AnimateFlippedElementsArgs) => {\n  // the stuff below is used so we can return a promise that resolves when all FLIP animations have\n  // completed\n  let closureResolve: (flipIds: FlippedIds) => void\n\n  const flipCompletedPromise: Promise<FlippedIds> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n  // hook for users of lib to attach logic when all flip animations have completed\n  if (onComplete) {\n    flipCompletedPromise.then(() => onComplete(containerEl, decisionData))\n  }\n  if (!flippedIds.length) {\n    return () => {\n      closureResolve!([])\n      return flipCompletedPromise\n    }\n  }\n\n  const completedAnimationIds: FlippedIds = []\n\n  const firstElement: HTMLElement = getElement(flippedIds[0])\n  // special handling for iframes\n  const body = firstElement\n    ? firstElement.ownerDocument!.querySelector('body')!\n    : document.querySelector('body')!\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (debug) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.'\n      )\n    }\n  }\n\n  const duplicateFlipIds = getDuplicateValsAsStrings(flippedIds)\n  if (process.env.NODE_ENV !== 'production') {\n    if (duplicateFlipIds.length) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId${\n          duplicateFlipIds.length > 1 ? 's' : ''\n        }: ${duplicateFlipIds.join('\\n')}`\n      )\n    }\n  }\n\n  const flipDataArray: FlipDataArray = flippedIds\n\n    // take all the measurements we need\n    // and return an object with animation functions + necessary data\n    .map(id => {\n      const prevRect = flippedElementPositionsBeforeUpdate[id].rect\n      const currentRect = flippedElementPositionsAfterUpdate[id].rect\n      const prevOpacity = flippedElementPositionsBeforeUpdate[id].opacity\n      const currentOpacity = flippedElementPositionsAfterUpdate[id].opacity\n      const needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1\n      const element = flippedElementPositionsAfterUpdate[id].element\n\n      // don't animate elements outside of the user's viewport\n      if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\n        return false\n      }\n\n      // this might happen if we are rapidly adding & removing elements(?)\n      if (!element) {\n        return false\n      }\n\n      const flipConfig = extractFlipConfig(element)\n\n      const springConfig = getSpringConfig({\n        flipperSpring: spring,\n        flippedSpring: flipConfig.spring\n      })\n\n      const stagger =\n        flipConfig.stagger === true ? 'default' : flipConfig.stagger\n\n      const toReturn = {\n        element,\n        id,\n        stagger,\n        springConfig\n      }\n\n      if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\n        const elementShouldFlip = flipCallbacks[id].shouldFlip!(\n          decisionData.previous,\n          decisionData.current\n        )\n        if (!elementShouldFlip) {\n          return false\n        }\n      }\n\n      // don't animate elements that didn't visibly change\n      // but possibly animate their children\n\n      const translateXDifference = Math.abs(prevRect.left - currentRect.left)\n      const translateYDifference = Math.abs(prevRect.top - currentRect.top)\n\n      const translateDifference = translateXDifference + translateYDifference\n\n      const scaleXDifference = Math.abs(prevRect.width - currentRect.width)\n      const scaleYDifference = Math.abs(prevRect.height - currentRect.height)\n\n      const scaleDifference = scaleXDifference + scaleYDifference\n\n      const opacityDifference = Math.abs(currentOpacity - prevOpacity)\n      const differenceTooSmall =\n        translateDifference < 0.5 &&\n        scaleDifference < 0.5 &&\n        opacityDifference < 0.01\n\n      const hiddenDueToDimensions =\n        (prevRect.height === 0 && currentRect.height === 0) ||\n        (prevRect.width === 0 && currentRect.width === 0)\n      if (hiddenDueToDimensions || differenceTooSmall) {\n        return false\n      }\n\n      const currentTransform = Rematrix.parse(\n        flippedElementPositionsAfterUpdate[id].transform\n      )\n\n      const toVals: AnimatedVals = { matrix: currentTransform }\n\n      const fromVals: AnimatedVals = { matrix: [] }\n      const transformsArray = [currentTransform]\n\n      // we're only going to animate the values that the child wants animated\n      if (flipConfig.translate) {\n        transformsArray.push(\n          Rematrix.translateX(prevRect.left - currentRect.left)\n        )\n        transformsArray.push(\n          Rematrix.translateY(prevRect.top - currentRect.top)\n        )\n      }\n      // going any smaller than 1px breaks transitions in Chrome\n      if (flipConfig.scale) {\n        transformsArray.push(\n          Rematrix.scaleX(\n            Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)\n          )\n        )\n        transformsArray.push(\n          Rematrix.scaleY(\n            Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)\n          )\n        )\n      }\n\n      if (flipConfig.opacity) {\n        fromVals.opacity = prevOpacity\n        toVals.opacity = currentOpacity\n      }\n\n      let invertedChildren: InvertedChildren = []\n\n      if (\n        !flipCallbacks[id] ||\n        !flipCallbacks[id].shouldInvert ||\n        flipCallbacks[id].shouldInvert!(\n          decisionData.previous,\n          decisionData.current\n        )\n      ) {\n        const invertedChildElements = getInvertedChildren(element, id)\n        invertedChildren = invertedChildElements.map(c => [\n          c,\n          extractFlipConfig(c)\n        ]) as InvertedChildren\n      }\n\n      fromVals.matrix = convertMatrix3dArrayTo2dArray(\n        transformsArray.reduce(Rematrix.multiply)\n      )\n\n      toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix)\n\n      const applyStyles = createApplyStylesFunc({\n        element,\n        invertedChildren,\n        body\n      })\n\n      let onComplete: () => void\n      if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\n        // must cache or else this could cause an error\n        const cachedOnComplete = flipCallbacks[id].onComplete\n        onComplete = () => cachedOnComplete!(element, decisionData)\n      }\n\n      // this should be called when animation ends naturally\n      // but also when it is interrupted\n      // when it is called, the animation has already been cancelled\n      const onAnimationEnd = (isCancellation: boolean) => {\n        delete inProgressAnimations[id]\n        if (isFunction(onComplete)) {\n          onComplete()\n        }\n        // remove identity transform -- this should have no effect on layout\n        element.style.transform = ''\n        invertedChildren.forEach(([element]) => {\n          element.style.transform = ''\n        })\n        if (needsForcedMinVals && element) {\n          element.style.minHeight = ''\n          element.style.minWidth = ''\n        }\n        if (isCancellation) return\n\n        completedAnimationIds.push(id)\n\n        if (completedAnimationIds.length >= flipDataArray.length) {\n          // we can theoretically call multiple times since a promise only resolves 1x\n          // but that shouldnt happen\n          closureResolve(completedAnimationIds)\n        }\n      }\n\n      const animateOpacity =\n        isNumber(fromVals.opacity) &&\n        isNumber(toVals.opacity) &&\n        fromVals.opacity !== toVals.opacity\n\n      let onStartCalled = false\n\n      const getOnUpdateFunc: GetOnUpdateFunc = ({ spring, onAnimationEnd }) => {\n        inProgressAnimations[id] = {\n          destroy: spring.destroy.bind(spring),\n          onAnimationEnd\n        }\n        const onUpdate: OnUpdate = spring => {\n          if (flipCallbacks[id] && flipCallbacks[id].onSpringUpdate) {\n            flipCallbacks[id].onSpringUpdate!(spring.getCurrentValue())\n          }\n          // trigger the user provided onStart function\n          if (!onStartCalled) {\n            onStartCalled = true\n            if (flipCallbacks[id] && flipCallbacks[id].onStart) {\n              flipCallbacks[id].onStart!(element, decisionData)\n            }\n          }\n\n          const currentValue = spring.getCurrentValue()\n          if (!body.contains(element)) {\n            spring.destroy()\n            return\n          }\n\n          const vals: AnimatedVals = { matrix: [] }\n\n          vals.matrix = fromVals.matrix.map((fromVal, index) =>\n            tweenProp(fromVal, toVals.matrix[index], currentValue)\n          )\n\n          if (animateOpacity) {\n            vals.opacity = tweenProp(\n              fromVals.opacity!,\n              toVals.opacity!,\n              currentValue\n            )\n          }\n          applyStyles(vals)\n        }\n        return onUpdate\n      }\n\n      const initializeFlip: InitializeFlip = () => {\n        // before animating, immediately apply FLIP styles to prevent flicker\n        applyStyles({\n          matrix: fromVals.matrix,\n          opacity: animateOpacity ? fromVals.opacity : undefined,\n          forceMinVals: needsForcedMinVals\n        })\n\n        if (flipCallbacks[id] && flipCallbacks[id].onStartImmediate) {\n          flipCallbacks[id].onStartImmediate!(element, decisionData)\n        }\n        // and batch any other style updates if necessary\n        if (flipConfig.transformOrigin) {\n          element.style.transformOrigin = flipConfig.transformOrigin\n        } else if (applyTransformOrigin) {\n          element.style.transformOrigin = '0 0'\n        }\n\n        invertedChildren.forEach(([child, childFlipConfig]) => {\n          if (childFlipConfig.transformOrigin) {\n            child.style.transformOrigin = childFlipConfig.transformOrigin\n          } else if (applyTransformOrigin) {\n            child.style.transformOrigin = '0 0'\n          }\n        })\n      }\n\n      return assign({}, toReturn, {\n        stagger,\n        springConfig,\n        getOnUpdateFunc,\n        initializeFlip,\n        onAnimationEnd,\n        delayUntil: flipConfig.delayUntil\n      }) as FlipData\n    })\n    // filter out data for all non-animated elements first\n    .filter(Boolean) as FlipDataArray\n\n  flipDataArray.forEach(({ initializeFlip }) => initializeFlip())\n\n  if (debug) {\n    return () => {}\n  }\n\n  const elementIsFlipped = (flipId: FlipId) =>\n    flipDataArray.filter(f => f.id === flipId).length\n\n  const delayedFlip = flipDataArray.filter(\n    f => f.delayUntil && elementIsFlipped(f.delayUntil)\n  )\n\n  // key: flipId value: flip to delay until key is called\n  const delayUntilSprings = {} as IndexableObject\n  // key: flipId value: stagger to delay until key is called\n  const delayUntilStaggers = {} as IndexableObject\n  // key: stagger value: true\n  const delayedStaggerKeys = {} as IndexableObject\n\n  delayedFlip.forEach(flip => {\n    if (flip.stagger) {\n      delayedStaggerKeys[flip.stagger] = true\n      if (delayUntilStaggers[flip.delayUntil!])\n        delayUntilStaggers[flip.delayUntil!].push(flip.stagger)\n      else delayUntilStaggers[flip.delayUntil!] = [flip.stagger]\n    } else {\n      if (delayUntilSprings[flip.delayUntil!])\n        delayUntilSprings[flip.delayUntil!].push(flip)\n      else delayUntilSprings[flip.delayUntil!] = [flip]\n    }\n  })\n\n  const staggerDict = flipDataArray\n    .filter(flipData => flipData.stagger)\n    .reduce((acc, curr) => {\n      if (acc[curr.stagger]) {\n        acc[curr.stagger].push(curr)\n      } else {\n        acc[curr.stagger] = [curr]\n      }\n      return acc\n    }, {} as IndexableObject)\n\n  const immediateFlip = flipDataArray.filter(f => delayedFlip.indexOf(f) === -1)\n\n  immediateFlip.forEach(flipData => {\n    flipData.onSpringActivate = () => {\n      if (delayUntilSprings[flipData.id]) {\n        delayUntilSprings[flipData.id].forEach(createSpring)\n      }\n      if (delayUntilStaggers[flipData.id]) {\n        const uniqueStaggerKeys = Object.keys(\n          delayUntilStaggers[flipData.id].reduce(\n            (acc: IndexableObject, curr: string) =>\n              assign(acc, { [curr]: true }),\n            {}\n          )\n        )\n        uniqueStaggerKeys.forEach((staggerKey: string) => {\n          createStaggeredSprings(\n            staggerDict[staggerKey],\n            staggerConfig[staggerKey]\n          )\n        })\n      }\n    }\n  })\n\n  return () => {\n    // if there are no active FLIP animations, immediately resolve the\n    // returned promise\n    if (!flipDataArray.length) {\n      closureResolve([])\n    }\n    // animate non-staggered elements\n    immediateFlip\n      .filter(flipData => {\n        return !flipData.stagger\n      })\n      .forEach(createSpring)\n\n    // animate staggered elements\n    Object.keys(staggerDict).forEach(staggerKey => {\n      if (delayedStaggerKeys[staggerKey]) return\n      createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey])\n    })\n    return flipCompletedPromise\n  }\n}\n","import { toArray, assign } from '../../utilities'\nimport * as constants from '../../constants'\nimport { BoundingClientRect } from './types'\n\nexport const addTupleToObject = <T>(\n  acc: Record<string, T>,\n  curr: [string, T]\n): Record<string, T> => assign(acc, { [curr[0]]: curr[1] })\n\nexport const getAllElements = (\n  element?: HTMLElement,\n  portalKey?: string\n): HTMLElement[] => {\n  if (portalKey) {\n    return toArray(\n      document.querySelectorAll(`[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]`)\n    )\n  } else {\n    return toArray(element!.querySelectorAll(`[${constants.DATA_FLIP_ID}]`))\n  }\n}\nexport const getRects = (\n  flippedElements: HTMLElement[]\n): [HTMLElement, BoundingClientRect][] => {\n  return flippedElements.map((child: HTMLElement): [\n    HTMLElement,\n    BoundingClientRect\n  ] => [child, child.getBoundingClientRect()])\n}\n","import animateUnflippedElements from './animateUnflippedElements'\nimport animateFlippedElements from './animateFlippedElements'\nimport getFlippedElementPositionsAfterUpdate from './getFlippedElementPositions/getFlippedElementPositionsAfterUpdate'\nimport * as constants from '../constants'\nimport { assign, toArray } from '../utilities'\nimport {\n  GetElement,\n  BaseFlipArgs,\n  OnFlipKeyUpdateArgs,\n  FlippedIds\n} from './types'\nimport { AnimateUnflippedElementsArgs } from './animateUnflippedElements/types'\nimport {\n  AnimateFlippedElementsArgs,\n  ScopedSelector\n} from './animateFlippedElements/types'\n\nconst createPortalScopedSelector = (portalKey: string) => (\n  selector: string\n) => {\n  return toArray(\n    document.querySelectorAll(\n      `[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]${selector}`\n    )\n  )\n}\nconst createFlipperScopedSelector = (containerEl: HTMLElement) => {\n  const tempFlipperId = Math.random().toFixed(5)\n  containerEl.dataset.flipperId = tempFlipperId\n\n  return (selector: string) => {\n    return toArray(\n      containerEl.querySelectorAll(\n        `[data-flipper-id=\"${tempFlipperId}\"] ${selector}`\n      )\n    )\n  }\n}\nconst createScopedSelector = ({\n  containerEl,\n  portalKey\n}: {\n  containerEl?: HTMLElement\n  portalKey?: string\n}): ScopedSelector => {\n  if (portalKey) {\n    return createPortalScopedSelector(portalKey)\n  } else if (containerEl) {\n    return createFlipperScopedSelector(containerEl)\n  } else {\n    return () => []\n  }\n}\n\nconst createGetElementFunc = (scopedSelector: ScopedSelector): GetElement => {\n  return (id: string) => {\n    return scopedSelector(`[${constants.DATA_FLIP_ID}=\"${id}\"]`)[0]\n  }\n}\n\nconst onFlipKeyUpdate = ({\n  cachedOrderedFlipIds = [],\n  inProgressAnimations = {},\n  flippedElementPositionsBeforeUpdate = {},\n  flipCallbacks = {},\n  containerEl,\n  applyTransformOrigin,\n  spring,\n  debug,\n  portalKey,\n  staggerConfig = {},\n  decisionData = {},\n  handleEnterUpdateDelete,\n  onComplete,\n  onStart\n}: OnFlipKeyUpdateArgs) => {\n  const flippedElementPositionsAfterUpdate = getFlippedElementPositionsAfterUpdate(\n    {\n      element: containerEl,\n      portalKey\n    }\n  )\n\n  const scopedSelector = createScopedSelector({\n    containerEl,\n    portalKey\n  })\n  const getElement = createGetElementFunc(scopedSelector)\n\n  const isFlipped = (id: string) =>\n    flippedElementPositionsBeforeUpdate[id] &&\n    flippedElementPositionsAfterUpdate[id]\n\n  const unflippedIds = Object.keys(flippedElementPositionsBeforeUpdate)\n    .concat(Object.keys(flippedElementPositionsAfterUpdate))\n    .filter(id => !isFlipped(id))\n\n  const baseArgs: BaseFlipArgs = {\n    flipCallbacks,\n    getElement,\n    flippedElementPositionsBeforeUpdate,\n    flippedElementPositionsAfterUpdate,\n    inProgressAnimations,\n    decisionData\n  }\n\n  const animateUnFlippedElementsArgs = assign({}, baseArgs, {\n    unflippedIds\n  }) as AnimateUnflippedElementsArgs\n\n  const {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  } = animateUnflippedElements(animateUnFlippedElementsArgs)\n\n  const flippedIds: FlippedIds = cachedOrderedFlipIds.filter(isFlipped)\n  // @ts-ignore\n  const animateFlippedElementsArgs: AnimateFlippedElementsArgs = assign(\n    {},\n    baseArgs,\n    {\n      containerEl,\n      flippedIds,\n      applyTransformOrigin,\n      spring,\n      debug,\n      staggerConfig,\n      scopedSelector,\n      onComplete\n    }\n  )\n  if (onStart) onStart(containerEl, decisionData)\n\n  // the function handles putting flipped elements back in their original positions\n  // and returns another function to actually call the flip animation\n  const flip = animateFlippedElements(animateFlippedElementsArgs)\n\n  if (handleEnterUpdateDelete) {\n    handleEnterUpdateDelete({\n      hideEnteringElements,\n      animateEnteringElements,\n      animateExitingElements,\n      animateFlippedElements: flip\n    })\n  } else {\n    hideEnteringElements()\n    animateExitingElements().then(animateEnteringElements)\n    flip()\n  }\n}\n\nexport default onFlipKeyUpdate\n","import { addTupleToObject, getRects, getAllElements } from '../utilities'\nimport {\n  FlippedElementPositionsAfterUpdate,\n  FlippedElementPositionDatumAfterUpdate\n} from './types'\n\nconst getFlippedElementPositionsAfterUpdate = ({\n  element,\n  portalKey\n}: {\n  element: HTMLElement\n  portalKey?: string\n}): FlippedElementPositionsAfterUpdate => {\n  const positionArray = getRects(getAllElements(element, portalKey)).map(\n    ([child, childBCR]) => {\n      const computedStyle = window.getComputedStyle(child)\n      return [\n        child.dataset.flipId,\n        {\n          element: child,\n          rect: childBCR,\n          opacity: parseFloat(computedStyle.opacity!),\n          transform: computedStyle.transform\n        }\n      ]\n    }\n  ) as [string, FlippedElementPositionDatumAfterUpdate][]\n\n  return positionArray.reduce(addTupleToObject, {})\n}\n\nexport default getFlippedElementPositionsAfterUpdate\n","import { AnimateUnflippedElementsArgs, FragmentTuple } from './types'\n\nconst animateUnflippedElements = ({\n  unflippedIds,\n  flipCallbacks,\n  getElement,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  inProgressAnimations,\n  decisionData\n}: AnimateUnflippedElementsArgs) => {\n  const enteringElementIds = unflippedIds.filter(\n    id => flippedElementPositionsAfterUpdate[id]\n  )\n  const animatedEnteringElementIds = enteringElementIds.filter(\n    id => flipCallbacks[id] && flipCallbacks[id].onAppear\n  )\n\n  const animatedExitingElementIds = unflippedIds.filter(\n    id =>\n      flippedElementPositionsBeforeUpdate[id] &&\n      flipCallbacks[id] &&\n      flipCallbacks[id].onExit\n  )\n\n  const hideEnteringElements = () => {\n    animatedEnteringElementIds.forEach(id => {\n      const element = getElement(id)\n      if (element) {\n        element.style.opacity = '0'\n      }\n    })\n  }\n\n  const animateEnteringElements = () => {\n    animatedEnteringElementIds.forEach((id, i) => {\n      const element = getElement(id)\n      if (element) {\n        flipCallbacks[id].onAppear!(element, i, decisionData)\n      }\n    })\n  }\n\n  let closureResolve: () => void\n\n  const promiseToReturn: Promise<void> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n\n  const fragmentTuples: FragmentTuple[] = []\n  let exitingElementCount = 0\n\n  const onExitCallbacks = animatedExitingElementIds.map((id, i) => {\n    const {\n      domDataForExitAnimations: {\n        element,\n        parent,\n        childPosition: { top, left, width, height }\n      }\n    } = flippedElementPositionsBeforeUpdate[id]\n    // insert back into dom\n    if (getComputedStyle(parent).position === 'static') {\n      parent.style.position = 'relative'\n    }\n    element.style.transform = 'matrix(1, 0, 0, 1, 0, 0)'\n    element.style.position = 'absolute'\n    element.style.top = top + 'px'\n    element.style.left = left + 'px'\n    // taken out of the dom flow, the element might have lost these dimensions\n    element.style.height = height + 'px'\n    element.style.width = width + 'px'\n    let fragmentTuple: FragmentTuple | undefined = fragmentTuples.filter(\n      t => t[0] === parent\n    )[0]\n    if (!fragmentTuple) {\n      fragmentTuple = [parent, document.createDocumentFragment()]\n      fragmentTuples.push(fragmentTuple)\n    }\n    fragmentTuple[1].appendChild(element)\n\n    exitingElementCount += 1\n\n    const stop = () => {\n      try {\n        parent.removeChild(element)\n      } catch (DOMException) {\n        // the element is already gone\n      } finally {\n        exitingElementCount -= 1\n        if (exitingElementCount === 0) {\n          closureResolve()\n        }\n      }\n    }\n    // @ts-ignore\n    inProgressAnimations[id] = { stop }\n    return () => flipCallbacks[id].onExit!(element, i, stop, decisionData)\n  })\n\n  // now append all the fragments from the onExit callbacks\n  // (we use fragments for performance)\n  fragmentTuples.forEach(t => {\n    t[0].appendChild(t[1])\n  })\n\n  if (!onExitCallbacks.length) {\n    closureResolve!()\n  }\n\n  const animateExitingElements = () => {\n    onExitCallbacks.forEach(c => c())\n    return promiseToReturn\n  }\n\n  return {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  }\n}\n\nexport default animateUnflippedElements\n","import { addTupleToObject, getAllElements, getRects } from '../utilities'\nimport * as constants from '../../../constants'\nimport { toArray, assign } from '../../../utilities'\nimport {\n  FlippedElementPositionsBeforeUpdateReturnVals,\n  FlippedElementPositionDatumBeforeUpdate,\n  GetFlippedElementPositionsBeforeUpdateArgs,\n  ParentBCRs,\n  ChildIdsToParentBCRs,\n  ChildIdsToParents\n} from './types'\nimport { InProgressAnimations } from '../../../types'\n\nexport const cancelInProgressAnimations = (\n  inProgressAnimations: InProgressAnimations,\n  animatingElements: HTMLElement[]\n) => {\n  Object.keys(inProgressAnimations).forEach(id => {\n    if (inProgressAnimations[id].destroy) {\n      inProgressAnimations[id].destroy!()\n    }\n    if (inProgressAnimations[id].onAnimationEnd) {\n      inProgressAnimations[id].onAnimationEnd!(true)\n    }\n    delete inProgressAnimations[id]\n  })\n  animatingElements.forEach(el => {\n    el.style.transform = ''\n    el.style.opacity = ''\n  })\n}\n\nconst getFlippedElementPositionsBeforeUpdate = ({\n  element,\n  flipCallbacks = {},\n  inProgressAnimations = {},\n  portalKey\n}: GetFlippedElementPositionsBeforeUpdateArgs): FlippedElementPositionsBeforeUpdateReturnVals => {\n  const flippedElements = getAllElements(element, portalKey)\n\n  const inverseFlippedElements = toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}]`)\n  )\n\n  const childIdsToParentBCRs: ChildIdsToParentBCRs = {}\n  const parentBCRs: ParentBCRs = []\n  const childIdsToParents: ChildIdsToParents = {}\n  // this is for exit animations so we can re-insert exiting elements in the\n  // DOM later\n  flippedElements\n    .filter(\n      el =>\n        flipCallbacks &&\n        flipCallbacks[el.dataset.flipId!] &&\n        flipCallbacks[el.dataset.flipId!].onExit\n    )\n    .forEach(el => {\n      let parent = el.parentNode as HTMLElement\n      // this won't work for IE11\n      if (el.closest) {\n        const exitContainer = el.closest(\n          `[${constants.DATA_EXIT_CONTAINER}]`\n        ) as HTMLElement\n        if (exitContainer) {\n          parent = exitContainer\n        }\n      }\n      let bcrIndex = parentBCRs.findIndex(n => n[0] === parent)\n      if (bcrIndex === -1) {\n        parentBCRs.push([parent, parent.getBoundingClientRect()])\n        bcrIndex = parentBCRs.length - 1\n      }\n      childIdsToParentBCRs[el.dataset.flipId!] = parentBCRs[bcrIndex][1]\n      childIdsToParents[el.dataset.flipId!] = parent\n    })\n\n  const filteredFlippedElements = getRects(flippedElements)\n\n  const flippedElementPositionsTupleArray: [\n    string,\n    FlippedElementPositionDatumBeforeUpdate\n  ][] = filteredFlippedElements.map(([child, childBCR]) => {\n    const domDataForExitAnimations = {}\n\n    // only cache extra data for exit animations\n    // if the element has an onExit listener\n    if (\n      flipCallbacks &&\n      flipCallbacks[child.dataset.flipId!] &&\n      flipCallbacks[child.dataset.flipId!].onExit\n    ) {\n      const parentBCR = childIdsToParentBCRs[child.dataset.flipId!]\n\n      assign(domDataForExitAnimations, {\n        element: child,\n        parent: childIdsToParents[child.dataset.flipId!],\n        childPosition: {\n          top: childBCR.top - parentBCR.top,\n          left: childBCR.left - parentBCR.left,\n          width: childBCR.width,\n          height: childBCR.height\n        }\n      })\n    }\n\n    return [\n      child.dataset.flipId!,\n      {\n        rect: childBCR,\n        opacity: parseFloat(window.getComputedStyle(child).opacity || '1'),\n        domDataForExitAnimations\n      }\n    ]\n  }) as [string, FlippedElementPositionDatumBeforeUpdate][]\n\n  const flippedElementPositions = flippedElementPositionsTupleArray.reduce(\n    addTupleToObject,\n    {}\n  )\n\n  // do this at the very end since we want to cache positions of elements\n  // while they are mid-transition\n  cancelInProgressAnimations(\n    inProgressAnimations,\n    flippedElements.concat(inverseFlippedElements)\n  )\n\n  return {\n    flippedElementPositions,\n    cachedOrderedFlipIds: filteredFlippedElements.map(\n      ([el]) => el.dataset.flipId!\n    )\n  }\n}\n\nexport default getFlippedElementPositionsBeforeUpdate\n","import onFlipKeyUpdate from './flip'\nimport getFlippedElementPositionsBeforeUpdate from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate'\nimport { assign } from './utilities'\nimport {\n  StaggerConfig,\n  HandleEnterUpdateDelete,\n  InProgressAnimations,\n  FlipCallbacks,\n  OnFlipperComplete,\n  FlippedProps,\n  OnFlipperStart\n} from './types'\nimport { SpringOption } from './springSettings/types'\nimport { FlippedElementPositionsBeforeUpdate } from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlippedIds } from './flip/types'\n\ninterface Options {\n  element: HTMLElement\n  staggerConfig?: StaggerConfig\n  spring?: SpringOption\n  applyTransformOrigin?: boolean\n  handleEnterUpdateDelete?: HandleEnterUpdateDelete\n  debug?: boolean\n  onComplete?: OnFlipperComplete\n}\n\nclass Flipper {\n  private element!: HTMLElement\n  private staggerConfig!: StaggerConfig\n  private applyTransformOrigin = true\n  private handleEnterUpdateDelete!: HandleEnterUpdateDelete\n  private debug?: boolean\n  private spring!: SpringOption\n  private inProgressAnimations: InProgressAnimations\n  private flipCallbacks: FlipCallbacks\n  private snapshot!: {\n    flippedElementPositions: FlippedElementPositionsBeforeUpdate\n    cachedOrderedFlipIds: FlippedIds\n  }\n  private onComplete?: OnFlipperComplete\n  private onStart?: OnFlipperStart\n\n  constructor(options: Options) {\n    assign(this, options)\n\n    this.inProgressAnimations = {}\n    this.flipCallbacks = {}\n\n    this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this)\n    this.update = this.update.bind(this)\n    this.addFlipped = this.addFlipped.bind(this)\n    this.addInverted = this.addInverted.bind(this)\n  }\n\n  recordBeforeUpdate() {\n    this.snapshot = getFlippedElementPositionsBeforeUpdate({\n      element: this.element,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations\n    })\n  }\n  update(prevDecisionData: any, currentDecisionData: any) {\n    if (this.snapshot) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: this.snapshot\n          .flippedElementPositions,\n        cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n        containerEl: this.element,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.applyTransformOrigin,\n        spring: this.spring,\n        debug: this.debug,\n        staggerConfig: this.staggerConfig,\n        handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevDecisionData,\n          current: currentDecisionData\n        },\n        onComplete: this.onComplete,\n        onStart: this.onStart\n      })\n      delete this.snapshot\n    }\n  }\n\n  addFlipped({\n    element,\n    flipId,\n    opacity,\n    translate,\n    scale,\n    transformOrigin,\n    spring,\n    stagger,\n    delayUntil,\n    onAppear,\n    onStart,\n    onSpringUpdate,\n    onComplete,\n    onExit,\n    shouldFlip,\n    shouldInvert\n  }: FlippedProps & { element: HTMLElement }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!flipId) {\n      throw new Error('No flipId provided')\n    }\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin,\n      spring,\n      stagger,\n      delayUntil\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    if (flipId) {\n      element.dataset.flipId = String(flipId)\n    }\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n    // finally, add callbacks\n    this.flipCallbacks[flipId] = {\n      shouldFlip,\n      shouldInvert,\n      onAppear,\n      onStart,\n      onSpringUpdate,\n      onComplete,\n      onExit\n    }\n  }\n\n  addInverted({\n    element,\n    parent,\n    opacity,\n    translate,\n    scale,\n    transformOrigin\n  }: {\n    element: HTMLElement\n    parent: HTMLElement\n    opacity: boolean\n    translate: boolean\n    scale: boolean\n    transformOrigin: string\n  }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!parent) {\n      throw new Error('parent must be provided')\n    }\n\n    const inverseFlipId = parent.dataset.flipId\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    element.dataset.inverseFlipId = inverseFlipId\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n  }\n}\n\nexport default Flipper\n","// this is exclusively for users of the library to create their own enter + exit animations\nimport { SpringSystem } from '../forked-rebound'\nimport { SpringSystemInterface } from '../forked-rebound/types.d'\nimport { tweenProp, assign } from '../utilities'\nimport { normalizeSpring, springPresets } from '../springSettings'\nimport { SimpleSpringOptions } from './types'\nimport { SpringConfig } from '../springSettings/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\n/**\n * A simple spring function for animating DOM properties.\n * Returns a function that will immediately cancel the in-progress animation.\n * */\nconst createSimpleSpring = ({\n  config,\n  values,\n  onUpdate,\n  delay = 0,\n  onComplete\n}: SimpleSpringOptions) => {\n  const { stiffness, damping, overshootClamping } = assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(config)\n  ) as SpringConfig\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  spring.addListener({\n    onSpringAtRest: spring => {\n      if (onComplete) onComplete()\n      spring.destroy()\n    },\n    onSpringUpdate: spring => {\n      const springVal = spring.getCurrentValue()\n      if (!values) return onUpdate(springVal)\n      const currentValues = Object.keys(values)\n        .map(value => [\n          value,\n          tweenProp(values[value][0], values[value][1], springVal)\n        ])\n        .reduce((acc, curr) => {\n          return Object.assign(acc, { [curr[0]]: curr[1] })\n        }, {})\n      onUpdate(currentValues)\n    }\n  })\n  if (delay) {\n    setTimeout(() => {\n      spring.setEndValue(1)\n    }, delay)\n  } else {\n    spring.setEndValue(1)\n  }\n  return spring\n}\n\nexport default createSimpleSpring\n"]},"metadata":{},"sourceType":"module"}