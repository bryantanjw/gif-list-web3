{"ast":null,"code":"export const createGifAccount = async () => {\n  try {\n    const provider = getProvider();\n    const program = new Program(idl, programID, provider);\n    console.log(\"ping\");\n\n    if (baseAccount === null) {\n      await program.rpc.startStuffOff({\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n          systemProgram: SystemProgram.programId\n        },\n        signers: [baseAccount]\n      });\n      console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString());\n    }\n\n    await getGifList();\n  } catch (error) {\n    console.log(\"Error creating BaseAccount account:\", error);\n  }\n};","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/GifPortal/components/createGifAccount.js"],"names":["createGifAccount","provider","getProvider","program","Program","idl","programID","console","log","baseAccount","rpc","startStuffOff","accounts","publicKey","user","wallet","systemProgram","SystemProgram","programId","signers","toString","getGifList","error"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,YAAY;AACxC,MAAI;AACF,UAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAZ,EAAiBC,SAAjB,EAA4BL,QAA5B,CAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIC,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAMN,OAAO,CAACO,GAAR,CAAYC,aAAZ,CAA0B;AAC9BC,QAAAA,QAAQ,EAAE;AACRH,UAAAA,WAAW,EAAEA,WAAW,CAACI,SADjB;AAERC,UAAAA,IAAI,EAAEb,QAAQ,CAACc,MAAT,CAAgBF,SAFd;AAGRG,UAAAA,aAAa,EAAEC,aAAa,CAACC;AAHrB,SADoB;AAM9BC,QAAAA,OAAO,EAAE,CAACV,WAAD;AANqB,OAA1B,CAAN;AAQAF,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDC,WAAW,CAACI,SAAZ,CAAsBO,QAAtB,EAArD;AACD;;AAED,UAAMC,UAAU,EAAhB;AAED,GAlBD,CAkBE,OAAMC,KAAN,EAAa;AACbf,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDc,KAAnD;AACD;AACJ,CAtBM","sourcesContent":["export const createGifAccount = async () => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n      console.log(\"ping\");\n      if (baseAccount === null) {\n        await program.rpc.startStuffOff({\n          accounts: {\n            baseAccount: baseAccount.publicKey,\n            user: provider.wallet.publicKey,\n            systemProgram: SystemProgram.programId,\n          },\n          signers: [baseAccount]\n        });\n        console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString())\n      }\n      \n      await getGifList();\n\n    } catch(error) {\n      console.log(\"Error creating BaseAccount account:\", error)\n    }\n};"]},"metadata":{},"sourceType":"module"}