{"ast":null,"code":"import styled, { keyframes } from \"styled-components\";\nimport { promoteLayer } from \"./utils\";\n\nconst getDropdownRootKeyFrame = _ref => {\n  let {\n    animatingOut,\n    direction\n  } = _ref;\n  if (!animatingOut && direction) return null;\n  return keyframes`\n  from {\n    transform: ${animatingOut ? \"rotateX(0)\" : \"rotateX(-15deg)\"};\n    opacity: ${animatingOut ? 1 : 0};\n  }\n  to {\n    transform: ${animatingOut ? \"rotateX(-15deg)\" : \"rotateX(0)\"};\n    opacity: ${animatingOut ? 0 : 1};\n  }\n`;\n};\n\nexport const DropdownRoot = styled.div`\n  transform-origin: 0 0;\n  ${promoteLayer}\n  animation-name: ${getDropdownRootKeyFrame};\n  animation-duration: ${props => props.duration}ms;\n  /* use 'forwards' to prevent flicker on leave animation */\n  animation-fill-mode: forwards;\n  /* flex styles will center the caret child component */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  top: -20px;\n`;\nexport const Caret = styled.div`\n  width: 0;\n  height: 0;\n  border-width: 10px;\n  border-style: solid;\n  border-color: transparent transparent var(--white);\n  /* make sure it's above the main dropdown container so now box-shadow bleeds over it */\n  z-index: 1;\n  position: relative;\n  /* prevent any gap in between caret and main dropdown */\n  top: 1px;\n`;\nexport const DropdownBackground = styled.div`\n  transform-origin: 0 0;\n  background-color: var(--white);\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 0 50px 100px rgba(50, 50, 93, 0.1);\n  ${promoteLayer}\n`;\nexport const AltBackground = styled.div`\n  background-color: var(--grey);\n  width: 300%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -100%;\n  transform-origin: 0 0;\n  z-index: 0;\n  transition: transform ${props => props.duration}ms;\n`;\nexport const InvertedDiv = styled.div`\n  ${promoteLayer}\n  position: ${props => props.absolute ? \"absolute\" : \"relative\"};\n  top: 0;\n  left: 0;\n  &:first-of-type {\n    z-index: 1;\n  }\n  &:not(:first-of-type) {\n    z-index: -1;\n  }\n`;","map":{"version":3,"sources":["/Users/bryan/solana-gif-portal/app/src/components/Header/DropdownContainer/Components.js"],"names":["styled","keyframes","promoteLayer","getDropdownRootKeyFrame","animatingOut","direction","DropdownRoot","div","props","duration","Caret","DropdownBackground","AltBackground","InvertedDiv","absolute"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,YAAT,QAA6B,SAA7B;;AAEA,MAAMC,uBAAuB,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAgC;AAC/D,MAAI,CAACD,YAAD,IAAiBC,SAArB,EAAgC,OAAO,IAAP;AAChC,SAAOJ,SAAU;AACnB;AACA,iBAAiBG,YAAY,GAAG,YAAH,GAAkB,iBAAkB;AACjE,eAAeA,YAAY,GAAG,CAAH,GAAO,CAAE;AACpC;AACA;AACA,iBAAiBA,YAAY,GAAG,iBAAH,GAAuB,YAAa;AACjE,eAAeA,YAAY,GAAG,CAAH,GAAO,CAAE;AACpC;AACA,CATE;AAUD,CAZD;;AAcA,OAAO,MAAME,YAAY,GAAGN,MAAM,CAACO,GAAI;AACvC;AACA,IAAIL,YAAa;AACjB,oBAAoBC,uBAAwB;AAC5C,wBAAwBK,KAAK,IAAIA,KAAK,CAACC,QAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO;AAeP,OAAO,MAAMC,KAAK,GAAGV,MAAM,CAACO,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMI,kBAAkB,GAAGX,MAAM,CAACO,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,IAAIL,YAAa;AACjB,CARO;AAUP,OAAO,MAAMU,aAAa,GAAGZ,MAAM,CAACO,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,QAAS;AAClD,CAVO;AAYP,OAAO,MAAMI,WAAW,GAAGb,MAAM,CAACO,GAAI;AACtC,IAAIL,YAAa;AACjB,cAAcM,KAAK,IAAKA,KAAK,CAACM,QAAN,GAAiB,UAAjB,GAA8B,UAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO","sourcesContent":["import styled, { keyframes } from \"styled-components\"\nimport { promoteLayer } from \"./utils\"\n\nconst getDropdownRootKeyFrame = ({ animatingOut, direction }) => {\n  if (!animatingOut && direction) return null\n  return keyframes`\n  from {\n    transform: ${animatingOut ? \"rotateX(0)\" : \"rotateX(-15deg)\"};\n    opacity: ${animatingOut ? 1 : 0};\n  }\n  to {\n    transform: ${animatingOut ? \"rotateX(-15deg)\" : \"rotateX(0)\"};\n    opacity: ${animatingOut ? 0 : 1};\n  }\n`\n}\n\nexport const DropdownRoot = styled.div`\n  transform-origin: 0 0;\n  ${promoteLayer}\n  animation-name: ${getDropdownRootKeyFrame};\n  animation-duration: ${props => props.duration}ms;\n  /* use 'forwards' to prevent flicker on leave animation */\n  animation-fill-mode: forwards;\n  /* flex styles will center the caret child component */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  top: -20px;\n`\n\nexport const Caret = styled.div`\n  width: 0;\n  height: 0;\n  border-width: 10px;\n  border-style: solid;\n  border-color: transparent transparent var(--white);\n  /* make sure it's above the main dropdown container so now box-shadow bleeds over it */\n  z-index: 1;\n  position: relative;\n  /* prevent any gap in between caret and main dropdown */\n  top: 1px;\n`\n\nexport const DropdownBackground = styled.div`\n  transform-origin: 0 0;\n  background-color: var(--white);\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 0 50px 100px rgba(50, 50, 93, 0.1);\n  ${promoteLayer}\n`\n\nexport const AltBackground = styled.div`\n  background-color: var(--grey);\n  width: 300%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -100%;\n  transform-origin: 0 0;\n  z-index: 0;\n  transition: transform ${props => props.duration}ms;\n`\n\nexport const InvertedDiv = styled.div`\n  ${promoteLayer}\n  position: ${props => (props.absolute ? \"absolute\" : \"relative\")};\n  top: 0;\n  left: 0;\n  &:first-of-type {\n    z-index: 1;\n  }\n  &:not(:first-of-type) {\n    z-index: -1;\n  }\n`"]},"metadata":{},"sourceType":"module"}